{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routing.ts","webpack:///./src/app/components/deliver/detail/detail.component.css","webpack:///./src/app/components/deliver/detail/detail.component.html","webpack:///./src/app/components/deliver/detail/detail.component.ts","webpack:///./src/app/components/deliver/home/home.component.css","webpack:///./src/app/components/deliver/home/home.component.html","webpack:///./src/app/components/deliver/home/home.component.ts","webpack:///./src/app/components/restaurant/current-order/current-order.component.css","webpack:///./src/app/components/restaurant/current-order/current-order.component.html","webpack:///./src/app/components/restaurant/current-order/current-order.component.ts","webpack:///./src/app/components/restaurant/menu-edit/menu-edit.component.css","webpack:///./src/app/components/restaurant/menu-edit/menu-edit.component.html","webpack:///./src/app/components/restaurant/menu-edit/menu-edit.component.ts","webpack:///./src/app/components/restaurant/menu/menu.component.css","webpack:///./src/app/components/restaurant/menu/menu.component.html","webpack:///./src/app/components/restaurant/menu/menu.component.ts","webpack:///./src/app/components/restaurant/restaurant-home/restaurant-home.component.css","webpack:///./src/app/components/restaurant/restaurant-home/restaurant-home.component.html","webpack:///./src/app/components/restaurant/restaurant-home/restaurant-home.component.ts","webpack:///./src/app/components/restaurant/restaurant-order-history/order-history.component.css","webpack:///./src/app/components/restaurant/restaurant-order-history/order-history.component.html","webpack:///./src/app/components/restaurant/restaurant-order-history/order-history.component.ts","webpack:///./src/app/components/restaurant/restaurant-profile/restaurant-profile.component.css","webpack:///./src/app/components/restaurant/restaurant-profile/restaurant-profile.component.html","webpack:///./src/app/components/restaurant/restaurant-profile/restaurant-profile.component.ts","webpack:///./src/app/components/user/checkout/checkout.component.css","webpack:///./src/app/components/user/checkout/checkout.component.html","webpack:///./src/app/components/user/checkout/checkout.component.ts","webpack:///./src/app/components/user/menu/menu.component.css","webpack:///./src/app/components/user/menu/menu.component.html","webpack:///./src/app/components/user/menu/menu.component.ts","webpack:///./src/app/components/user/order/order.component.css","webpack:///./src/app/components/user/order/order.component.html","webpack:///./src/app/components/user/order/order.component.ts","webpack:///./src/app/components/user/orderhistory/orderhistory.component.css","webpack:///./src/app/components/user/orderhistory/orderhistory.component.html","webpack:///./src/app/components/user/orderhistory/orderhistory.component.ts","webpack:///./src/app/components/user/user-profile/user-profile.component.css","webpack:///./src/app/components/user/user-profile/user-profile.component.html","webpack:///./src/app/components/user/user-profile/user-profile.component.ts","webpack:///./src/app/components/website/home/home.component.css","webpack:///./src/app/components/website/home/home.component.html","webpack:///./src/app/components/website/home/home.component.ts","webpack:///./src/app/components/website/login/login.component.css","webpack:///./src/app/components/website/login/login.component.html","webpack:///./src/app/components/website/login/login.component.ts","webpack:///./src/app/components/website/register/register.component.css","webpack:///./src/app/components/website/register/register.component.html","webpack:///./src/app/components/website/register/register.component.ts","webpack:///./src/app/components/website/restaurant/restaurant.component.css","webpack:///./src/app/components/website/restaurant/restaurant.component.html","webpack:///./src/app/components/website/restaurant/restaurant.component.ts","webpack:///./src/app/model/restaurant.client.model.ts","webpack:///./src/app/model/user.client.model.ts","webpack:///./src/app/services/auth-guard.service.ts","webpack:///./src/app/services/deliver.service.client.ts","webpack:///./src/app/services/menu.service.client.ts","webpack:///./src/app/services/order.service.client.ts","webpack:///./src/app/services/restaurant.service.client.ts","webpack:///./src/app/services/shared.service.ts","webpack:///./src/app/services/user.service.client.ts","webpack:///./src/app/services/website.service.client.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<router-outlet></router-outlet>\\n\"","import {Component} from '@angular/core';\nimport {User} from './model/user.client.model';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'web5610';\n  user: User;\n}\n","import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\nimport {FormsModule} from '@angular/forms';\nimport {AppComponent} from './app.component';\n\nimport {Routing} from './app.routing';\nimport {QuillEditorModule} from 'ngx-quill-editor/quillEditor.module';\nimport { UserProfileComponent } from './components/user/user-profile/user-profile.component';\nimport { OrderhistoryComponent } from './components/user/orderhistory/orderhistory.component';\nimport { CheckoutComponent } from './components/user/checkout/checkout.component';\nimport { OrderComponent } from './components/user/order/order.component';\nimport { RestaurantProfileComponent } from './components/restaurant/restaurant-profile/restaurant-profile.component';\nimport { MenuComponent } from './components/restaurant/menu/menu.component';\nimport { HomeComponent } from './components/website/home/home.component';\nimport { RestaurantComponent } from './components/website/restaurant/restaurant.component';\nimport { LoginComponent } from './components/website/login/login.component';\nimport { RegisterComponent } from './components/website/register/register.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { RestaurantHomeComponent } from './components/restaurant/restaurant-home/restaurant-home.component';\nimport { MenuEditComponent } from './components/restaurant/menu-edit/menu-edit.component';\nimport { RestaurantOrderHistoryComponent } from './components/restaurant/restaurant-order-history/order-history.component';\nimport {MatRadioModule} from '@angular/material/radio';\nimport {UserService} from './services/user.service.client';\nimport {RestaurantService} from './services/restaurant.service.client';\nimport {OrderService} from './services/order.service.client';\nimport {WebsiteService} from './services/website.service.client';\nimport {SharedService} from './services/shared.service';\nimport { CurrentOrderComponent } from './components/restaurant/current-order/current-order.component';\nimport {AuthGuard} from './services/auth-guard.service';\nimport { DetailComponent } from './components/deliver/detail/detail.component';\nimport { DeliverHomeComponent } from './components/deliver/home/home.component';\nimport { DeliverService } from './services/deliver.service.client';\nimport { AgmDirectionModule} from 'agm-direction'; // agm-direction\nimport { AgmCoreModule } from '@agm/core';\nimport {MenuService} from './services/menu.service.client';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    LoginComponent,\n    UserProfileComponent,\n    RegisterComponent,\n    UserProfileComponent,\n    OrderhistoryComponent,\n    CheckoutComponent,\n    OrderComponent,\n    RestaurantProfileComponent,\n    MenuComponent,\n    RestaurantComponent,\n    RestaurantHomeComponent,\n    MenuEditComponent,\n    RestaurantOrderHistoryComponent,\n    DetailComponent,\n    DeliverHomeComponent,\n    CurrentOrderComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    Routing,\n    FormsModule,\n    // QuillEditorModule\n    MatRadioModule,\n    AgmDirectionModule,\n    AgmCoreModule.forRoot({apiKey: 'AIzaSyBtrCeFbuL6cSgjC2UyJsaJuJoXKXAmQQM', libraries: ['geometry']})\n  ],\n  providers: [UserService, RestaurantService, OrderService, WebsiteService, SharedService, AuthGuard, DeliverService, MenuService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","import {RouterModule, Routes} from '@angular/router';\nimport {ModuleWithProviders} from '@angular/core';\nimport {HomeComponent} from \"./components/website/home/home.component\";\nimport {LoginComponent} from \"./components/website/login/login.component\";\nimport {UserProfileComponent} from \"./components/user/user-profile/user-profile.component\";\nimport {OrderhistoryComponent} from \"./components/user/orderhistory/orderhistory.component\";\nimport {CheckoutComponent} from \"./components/user/checkout/checkout.component\";\nimport {OrderComponent} from \"./components/user/order/order.component\";\nimport {RestaurantProfileComponent} from \"./components/restaurant/restaurant-profile/restaurant-profile.component\";\nimport {RegisterComponent} from \"./components/website/register/register.component\";\nimport {RestaurantHomeComponent} from './components/restaurant/restaurant-home/restaurant-home.component';\nimport {RestaurantOrderHistoryComponent} from './components/restaurant/restaurant-order-history/order-history.component';\nimport {CurrentOrderComponent} from './components/restaurant/current-order/current-order.component';\nimport {MenuEditComponent} from './components/restaurant/menu-edit/menu-edit.component';\nimport { DetailComponent } from './components/deliver/detail/detail.component';\nimport { DeliverHomeComponent } from './components/deliver/home/home.component';\nimport {AuthGuard} from './services/auth-guard.service';\nimport {MenuComponent} from './components/restaurant/menu/menu.component';\n// Import all other components here\nimport {UsermenuComponent} from './components/user/menu/menu.component';\n\nconst APP_ROUTES: Routes = [\n  {path: '', component: HomeComponent},\n  {path: 'login', component: LoginComponent},\n  {path: 'register', component: RegisterComponent},\n    //employee\n\n    //restaurant\n  {path: 'restaurant/home', component: RestaurantHomeComponent, canActivate: [AuthGuard]},\n  {path: 'restaurant/profile', component: RestaurantProfileComponent, canActivate: [AuthGuard]},\n  {path: 'restaurant/orderhistory', component: RestaurantOrderHistoryComponent, canActivate: [AuthGuard]},\n  {path: 'restaurant/currentorders', component: CurrentOrderComponent, canActivate: [AuthGuard]},\n  {path: 'restaurant/menu', component: MenuComponent, canActivate: [AuthGuard]},\n  {path: 'restaurant/menu/:did', component: MenuEditComponent, canActivate: [AuthGuard]},\n    //user\n  {path: 'user/:uid/home', component: UserProfileComponent},\n  {path: 'user/:uid/profile', component: UserProfileComponent},\n  {path: 'user/:uid/checkout', component: CheckoutComponent},\n  {path: 'user/:uid/orderhistory', component: OrderhistoryComponent},\n  {path: 'user/:uid/order/:oid', component: OrderComponent},\n  {path: 'user/:uid/menu', component: UsermenuComponent},\n  //delivery\n  {path: 'deliver/:uid/home', component: DeliverHomeComponent},\n  {path: 'deliver/:uid/detail/:oid', component: DetailComponent},\n    //order-history\n  {path: 'delivery/:did/home', component: UserProfileComponent},\n  {path: 'delivery/:did/profile', component: UserProfileComponent},\n  {path: 'delivery/:did/pendingorder', component: OrderhistoryComponent},\n  {path: 'delivery/:did/ondelivery', component: OrderComponent},\n    //restaurant-order-history\n\n    //admin\n\n\n  // so on\n];\n// Export the routes as module providers\nexport const Routing: ModuleWithProviders = RouterModule.forRoot(APP_ROUTES, {useHash: true});\n","module.exports = \".order-card {\\n    margin-top: 20px;\\n    margin-bottom: 20px;\\n}\\n.deliver-btn {\\n    margin-right: 10px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9kZWxpdmVyL2RldGFpbC9kZXRhaWwuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGdCQUFnQjtJQUNoQixtQkFBbUI7QUFDdkI7QUFDQTtJQUNJLGtCQUFrQjtBQUN0QiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvZGVsaXZlci9kZXRhaWwvZGV0YWlsLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIub3JkZXItY2FyZCB7XG4gICAgbWFyZ2luLXRvcDogMjBweDtcbiAgICBtYXJnaW4tYm90dG9tOiAyMHB4O1xufVxuLmRlbGl2ZXItYnRuIHtcbiAgICBtYXJnaW4tcmlnaHQ6IDEwcHg7XG59Il19 */\"","module.exports = \"<div>\\n    <nav class=\\\"navbar fixed-top cl-blue-navbar\\\">\\n      <div class=\\\"container\\\">\\n          <div class=\\\"navbar-text\\\">\\n              <a routerLink=\\\"/deliver/{{userId}}/home\\\" class=\\\"cl-text-white cl-icon-padding\\\">\\n                <span class=\\\"fas fa-chevron-left fontawsome_icon\\\"></span>\\n              </a>\\n            </div>\\n        <div class=\\\"cl-text-white navbar-brand cl-text-bold\\\">\\n          Detail\\n        </div>\\n        <a routerLink=\\\"/delivery/{{userId}}/profile\\\" class=\\\"cl-text-white cl-icon-padding pull-right cl-text-bold\\\">\\n          <div class=\\\"alert alert-warning nav-btn\\\" role=\\\"alert\\\">\\n            Profile\\n          </div>\\n        </a>\\n      </div>\\n    </nav>\\n  \\n    <div class=\\\"container website-new-content\\\">\\n        <div class=\\\"card order-card\\\">\\n          <div class=\\\"card-header\\\">\\n              <strong>{{status}}</strong>\\n          </div>\\n          <div class=\\\"card-body\\\">\\n            <h5 class=\\\"card-title\\\">{{order.userAddress}}</h5>\\n            <div><strong>User</strong> {{order.user}}</div>\\n            <div><strong>User Address:</strong> {{order.userAddress}}</div>\\n            <div><strong>User Phone Number:</strong> {{order.phone}}</div>\\n            <div><strong>Restaurant:</strong> {{order.restaurant}}</div>\\n            <div><strong>Time</strong> {{order.time}}</div>\\n            <div><strong>Status:</strong> {{status}}</div>\\n            <br>\\n            <div><strong>Details:</strong></div>\\n            <table class=\\\"table table-responsive table-bordered \\\">\\n              <thead>\\n                <tr>\\n                  <th scope=\\\"col\\\">dish</th>\\n                  <th scope=\\\"col\\\" *ngFor=\\\"let dish of order.details.dish\\\">{{dish}}</th>\\n                </tr>\\n                <tr>\\n                    <th scope=\\\"col\\\">amount</th>\\n                    <th scope=\\\"col\\\" *ngFor=\\\"let amount of order.details.quantity\\\">{{amount}}</th>\\n                </tr>\\n              </thead>\\n            </table>\\n            <div><strong>Total: $</strong>{{order.details.total}}</div>\\n            <br>\\n            <div><strong>Distance:</strong> {{distance}}</div>\\n            <br>\\n            <button type=\\\"button\\\" class=\\\"btn btn-warning pull-right deliver-btn\\\" *ngIf=\\\"order.status==2\\\" (click)=\\\"acceptOrder()\\\">Accept</button>\\n            <button type=\\\"button\\\" class=\\\"btn btn-success pull-right deliver-btn\\\" *ngIf=\\\"order.status==3\\\" (click)=\\\"completeOrder()\\\">Complete</button>\\n            <button type=\\\"button\\\" class=\\\"btn btn-info pull-right deliver-btn\\\" *ngIf=\\\"order.status==3\\\" (click)=\\\"cancelOrder()\\\">Cancel</button>\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-10\\\">\\n                <agm-map [latitude]=\\\"lat\\\" [longitude]=\\\"lng\\\" style=\\\"height: 600px\\\">\\n                  <agm-direction *ngIf=\\\"dir\\\" [origin]=\\\"dir.origin\\\" [destination]=\\\"dir.destination\\\" [markerOptions]=\\\"markerOptions\\\" [renderOptions]=\\\"renderOptions\\\"></agm-direction>\\n                </agm-map>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n        \\n    </div>\\n      \\n      \\n  \\n    <nav class=\\\"navbar fixed-bottom cl-blue-navbar\\\">\\n      <div class=\\\"container\\\">\\n        <div class=\\\"cl-text-white navbar-brand cl-text-bold navbar-header-text\\\">\\n          Deliver\\n        </div>\\n      </div>\\n    </nav>\\n    \\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { DeliverService } from 'src/app/services/deliver.service.client';\nimport { User } from 'src/app/model/user.client.model';\nimport { Order } from 'src/app/model/order.client.model';\nimport { SharedService } from 'src/app/services/shared.service';\n\n@Component({\n  selector: 'app-detail',\n  templateUrl: './detail.component.html',\n  styleUrls: ['./detail.component.css']\n})\nexport class DetailComponent implements OnInit {\n\n  userId: string;\n  orderId: string;\n  user: User;\n  order: Order;\n  status: string;\n  distance: String;\n\n  //initial center position\n  lat: Number = 24.799448;\n  lng: Number = 120.979021;\n  //google maps zoom\n  zoom: Number = 14;\n\n    //Get Directions\n  dir = undefined;\n\n  markerOptions = {\n    orgin: {\n      infoWindow: 'You are here',\n      draggable: false\n    },\n    destination: {\n      label: 'Destination',\n      draggable: false\n    }\n  };\n\n  renderOptions = {\n    supperssMarkers: true,\n    draggable: false\n  };\n\n  constructor(private _activatedRoute: ActivatedRoute, private _deliverService: DeliverService, private _sharedService: SharedService) { }\n\n  ngOnInit() {\n    this._activatedRoute.params.subscribe(params => {\n      this.userId = params['uid'];\n      this.orderId = params['oid'];\n      console.log('user id: ' + this.userId);\n\n      this.user = this._sharedService.user;\n      this.order = this._sharedService.selectedOrder;\n      if (this.order.status === 3) {\n        this.status = 'in transit';\n      } else if (this.order.status === 2) {\n        this.status = 'active';\n      }\n      this.getDirection();\n    });\n  }\n\n  acceptOrder() {\n    this._deliverService.acceptOrder(this.userId, this.orderId, '3').subscribe(\n      data => {\n          console.log(data);\n          this.order.status = 3;\n      },\n      error =>{\n\n      }\n    );\n  }\n\n  completeOrder() {\n    this._deliverService.completeOrder(this.userId, this.orderId, '4').subscribe(\n      data => {\n        console.log(data);\n        this.order.status = 4;\n      },\n      error =>{\n\n      }\n    );\n  }\n\n  cancelOrder() {\n    this._deliverService.cancelOrder(this.userId, this.orderId, '5').subscribe(\n      data => {\n        console.log(data);\n        this.order.status = 5;\n      },\n      error =>{\n\n      }\n    );\n  }\n\n  calculateDistance(lat: Number, lng: Number, destination: String) {\n    this._deliverService.calculate(lat.toString(), lng.toString(), destination).subscribe(\n      (data: any) => {\n        console.log('distance: ' + data.distance.text);\n        this.distance = data.distance.text;\n      }\n    );\n  }\n\n  getDirection() {\n    console.log(this.lat);\n    console.log(this.lng);\n    navigator.geolocation.getCurrentPosition( pos => {\n      console.log(pos);\n        this.lng = pos.coords.longitude;\n        this.lat = pos.coords.latitude;\n        this.dir = {\n          origin: { lat: this.lat, lng: this.lng },\n          destination: this.order.userAddress// { lat: 24.799524, lng: 120.975017 }\n        };\n        this.calculateDistance(this.lat, this.lng, this.order.userAddress);\n      });\n  }\n\n}\n","module.exports = \".nav-btn {\\n    margin-bottom: 0px;\\n}\\n\\n.current-order-card {\\n    margin-top: 20px;\\n    margin-bottom: 20px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9kZWxpdmVyL2hvbWUvaG9tZS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksa0JBQWtCO0FBQ3RCOztBQUVBO0lBQ0ksZ0JBQWdCO0lBQ2hCLG1CQUFtQjtBQUN2QiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvZGVsaXZlci9ob21lL2hvbWUuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5uYXYtYnRuIHtcbiAgICBtYXJnaW4tYm90dG9tOiAwcHg7XG59XG5cbi5jdXJyZW50LW9yZGVyLWNhcmQge1xuICAgIG1hcmdpbi10b3A6IDIwcHg7XG4gICAgbWFyZ2luLWJvdHRvbTogMjBweDtcbn0iXX0= */\"","module.exports = \"<div>\\n  <nav class=\\\"navbar fixed-top cl-blue-navbar\\\">\\n    <div class=\\\"container\\\">\\n      <div class=\\\"cl-text-white navbar-brand cl-text-bold\\\">\\n        Home\\n      </div>\\n      <a routerLink=\\\"/delivery/{{userId}}/profile\\\" class=\\\"cl-text-white cl-icon-padding pull-right cl-text-bold\\\">\\n        <div class=\\\"alert alert-warning nav-btn\\\" role=\\\"alert\\\">\\n          Profile\\n        </div>\\n      </a>\\n    </div>\\n  </nav>\\n\\n  <div class=\\\"container\\\">\\n      <div class=\\\"card current-order-card bg-success\\\">\\n        <div class=\\\"card-header\\\">\\n            <strong>InTransit</strong>\\n            <button class=\\\"btn btn-primary pull-right\\\" (click)=\\\"inTransitDetail()\\\">Details</button>\\n        </div>\\n        <div class=\\\"card-body text-white\\\">\\n          <h5 class=\\\"card-title\\\">{{inTransitOrder.userAddress}}</h5>\\n          <div><strong>User</strong> {{inTransitOrder.user}}</div>\\n          <div><strong>User Address:</strong> {{inTransitOrder.userAddress}}</div>\\n          <div><strong>Restaurant:</strong> {{inTransitOrder.restaurant}}</div>\\n          <div><strong>Time</strong> {{inTransitOrder.time}}</div>\\n          <div><strong>Status:</strong> in transit</div>\\n        </div>\\n      </div>\\n\\n    <ul class=\\\"list-group\\\">\\n      <li *ngFor=\\\"let order of orders\\\" class=\\\"list-group-item list-group-item-warning text-dark\\\">\\n        <button class=\\\"alert alert-info pull-right\\\" (click)=\\\"detail(order)\\\">detail</button>\\n        <div><strong>User</strong> {{order.user}}</div>\\n        <div><strong>User Address:</strong> {{order.userAddress}}</div>\\n        <div><strong>Restaurant:</strong> {{order.restaurant}}</div>\\n        <div><strong>Time</strong> {{order.time}}</div>\\n        <div><strong>Status:</strong> active</div>\\n      </li>\\n    </ul>\\n  </div>\\n\\n  <nav class=\\\"navbar fixed-bottom cl-blue-navbar\\\">\\n    <div class=\\\"container\\\">\\n      <div class=\\\"cl-text-white navbar-brand cl-text-bold navbar-header-text\\\">\\n        Deliver\\n      </div>\\n    </div>\\n  </nav>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { DeliverService } from 'src/app/services/deliver.service.client';\nimport { Order } from 'src/app/model/order.client.model';\nimport { SharedService } from 'src/app/services/shared.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class DeliverHomeComponent implements OnInit {\n  userId: string;\n  orders: Order[];\n  inTransitOrder: Order;\n\n  constructor(private _activatedRoute: ActivatedRoute, private _deliverService: DeliverService, private _sharedService: SharedService, private router: Router) { }\n\n  ngOnInit() {\n    this._activatedRoute.params.subscribe(params => {\n      this.userId = params['uid'];\n      console.log('user id: ' + this.userId);\n    });\n\n    this._deliverService.findAllPendingOrder().subscribe(\n      (orders: Order[]) => {\n        this.orders = orders == null ? [] : orders;\n      },\n      (error: any) => {\n        console.log(error);\n      }\n    );\n\n\n    this._deliverService.findInTransitOrder(this.userId).subscribe(\n      (order: Order) => {\n        this.inTransitOrder = order;\n      },\n      (error: any) => {\n        console.log(error);\n      }\n    );\n\n  }\n\n  detail(order: Order) {\n    this._sharedService.selectedOrder = order;\n    this.router.navigate(['/deliver/' + this.userId + '/detail/' + this._sharedService.selectedOrder._id]);\n  }\n\n  inTransitDetail() {\n    this._sharedService.selectedOrder = this.inTransitOrder;\n    this.router.navigate(['/deliver/' + this.userId + '/detail/' + this.inTransitOrder._id]);\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcmVzdGF1cmFudC9jdXJyZW50LW9yZGVyL2N1cnJlbnQtb3JkZXIuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<nav class=\\\"navbar fixed-top cl-grey-navbar\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <div>\\n      <a class=\\\"navbar-brand cl-text-black cl-icon-padding\\\"\\n         routerLink=\\\"../home\\\">\\n        <i class=\\\"fas fa-angle-left\\\"></i>\\n      </a>\\n      <h1 class=\\\"navbar-brand cl-text-black cl-text-bold cl-text-grey\\\">\\n        Menu\\n      </h1>\\n    </div>\\n    <a class=\\\"navbar-brand cl-text-black float-right cl-icon-padding\\\"\\n       routerLink=\\\"./new\\\">\\n      <i class=\\\"fas fa-plus\\\"></i>\\n    </a>\\n  </div>\\n</nav>\\n\\n<div class=\\\"container cl-container-padding-more\\\">\\n  <div id=\\\"accordion\\\">\\n    <!--<div *ngFor=\\\"let order of orders\\\">-->\\n\\n      <!--<div class=\\\"card\\\">-->\\n        <!--<div class=\\\"card-header\\\" id=\\\"{{order._id}}\\\">-->\\n          <!--<h5 class=\\\"mb-0\\\">-->\\n            <!--<button class=\\\"btn btn-link\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#collapseOne\\\"-->\\n                    <!--aria-expanded=\\\"true\\\" aria-controls=\\\"collapseOne\\\">-->\\n              <!--{{order.time}}  Customer:{{order.user}}-->\\n            <!--</button>-->\\n          <!--</h5>-->\\n\\n          <!--<div class=\\\"float-right\\\">-->\\n            <!--<button class=\\\"btn btn-primary btn-small\\\" [style.color]=\\\"buttoncolor\\\"-->\\n                    <!--(click)=\\\"sendtoAlldelivery(order)\\\"-->\\n                    <!--type=\\\"submit\\\">Send to Delivery-->\\n            <!--</button>-->\\n            <!--<button class=\\\"btn btn-danger btn-small\\\" [style.color]=\\\"buttoncolor\\\"-->\\n                    <!--(click)=\\\"cancalOrder(order)\\\"-->\\n                    <!--type=\\\"submit\\\">Cancle Order-->\\n            <!--</button>-->\\n          <!--</div>-->\\n        <!--</div>-->\\n\\n        <!--<div id=\\\"collapseOne\\\" class=\\\"collapse show\\\" aria-labelledby=\\\"{{order._id}}\\\" data-parent=\\\"#accordion\\\">-->\\n          <!--<div class=\\\"card-body\\\">-->\\n            <!--<table class=\\\"table\\\">-->\\n              <!--<thead class=\\\"thead-light\\\">-->\\n              <!--<tr>-->\\n                <!--<th scope=\\\"col\\\">#</th>-->\\n                <!--<th scope=\\\"col\\\">Name</th>-->\\n                <!--<th scope=\\\"col\\\">Quantity</th>-->\\n              <!--</tr>-->\\n              <!--</thead>-->\\n              <!--<tbody *ngFor=\\\"let dish of order.details.dish; index as i\\\">-->\\n\\n              <!--<tr>-->\\n                <!--<th scope=\\\"row\\\">{{i+1}}</th>-->\\n                <!--<td>{{dish}}</td>-->\\n                <!--<td>{{order.details.quantity[i]}}</td>-->\\n              <!--</tr>-->\\n\\n              <!--</tbody>-->\\n            <!--</table>-->\\n          <!--</div>-->\\n        <!--</div>-->\\n\\n      <!--</div>-->\\n    <!--</div>-->\\n  </div>\\n</div>\\n\\n\\n    <nav class=\\\"navbar fixed-bottom cl-grey-navbar\\\">\\n      <div class=\\\"container-fluid\\\">\\n        <a routerLink=\\\"/profile\\\" class=\\\"navbar-brand cl-icon-padding cl-text-blue float-right\\\">\\n          <i class=\\\"fas fa-user cl-text-blue\\\"></i>\\n        </a>\\n      </div>\\n    </nav>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {Order} from \"../../../model/order.client.model\";\nimport {RestaurantService} from \"../../../services/restaurant.service.client\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {SharedService} from \"../../../services/shared.service\";\nimport {OrderService} from \"../../../services/order.service.client\";\n\n@Component({\n  selector: 'app-current-order',\n  templateUrl: './current-order.component.html',\n  styleUrls: ['./current-order.component.css']\n})\nexport class CurrentOrderComponent implements OnInit {\n\n  employeeId: String;\n  orders: Order[];\n\n  constructor(private restaurantService: RestaurantService,\n              private orderService: OrderService,\n              private route: ActivatedRoute,\n              private router: Router,\n              private sharedService: SharedService) { }\n\n  ngOnInit() {\n    this.employeeId = this.sharedService.user._id;\n    this.orderService.findOrderByStatus(null,1).subscribe(\n        (orders: any) => {\n          this.orders = orders;\n          console.log(this.orders);\n        }\n    )\n  }\n\n  sendtoAlldelivery(order: Order){\n    this.orderService.postOrder(order.user, order._id);\n    //this.buttoncolor = '#808389';\n  }\n\n  cancalOrder(order: Order){\n    this.orderService.cancelOrder(order.user, order._id);\n  }\n\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcmVzdGF1cmFudC9tZW51LWVkaXQvbWVudS1lZGl0LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div *ngIf=\\\"errorFlag\\\"\\n     class=\\\"alert alert-danger text-center\\\">\\n  {{errorMsg}}\\n</div>\\n<nav class=\\\"navbar fixed-top cl-grey-navbar\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <div>\\n      <a routerLink=\\\"..\\\" class=\\\"navbar-brand cl-text-black cl-icon-padding\\\">\\n        <i class=\\\"fas fa-angle-left\\\"></i>\\n      </a>\\n      <h1 class=\\\"navbar-brand cl-text-black cl-text-bold cl-text-grey\\\">\\n        Dish Edit\\n      </h1>\\n    </div>\\n    <a (click)=\\\"updateDish()\\\" class=\\\"navbar-brand cl-text-black float-right cl-icon-padding\\\">\\n      <i class=\\\"fas fa-check\\\"></i>\\n    </a>\\n  </div>\\n</nav>\\n\\n<div class=\\\"container\\\">\\n  <form>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"dish-name\\\">Name</label>\\n      <input [(ngModel)]=\\\"dish.dish_name\\\"\\n             name = \\\"name\\\"\\n             type=\\\"text\\\"\\n             class=\\\"form-control\\\"\\n             id=\\\"dish-name\\\"\\n             placeholder=\\\"name\\\"/>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"dish-price\\\">Price</label>\\n      <span>$</span>\\n      <input [(ngModel)]=\\\"dish.price\\\"\\n             name=\\\"width\\\"\\n             type=\\\"number\\\"\\n             class=\\\"form-control\\\"\\n             id=\\\"dish-price\\\"\\n             placeholder=\\\"Price\\\"/>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"dish-description\\\">Description</label>\\n      <textarea [(ngModel)]=\\\"dish.description\\\" name=\\\"description\\\" id=\\\"dish-description\\\" class=\\\"form-control\\\" rows=\\\"3\\\"\\n                placeholder=\\\"Description\\\"></textarea>\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"image-URL\\\">URL</label>\\n      <input [(ngModel)]=\\\"dish.url\\\"\\n             type=\\\"text\\\"\\n             name=\\\"url\\\"\\n             class=\\\"form-control\\\"\\n             id=\\\"image-URL\\\"\\n             placeholder=\\\"{{dish.url}}\\\"\\n             ngModel required\\n             #url=\\\"ngModel\\\"/>\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"exampleInputFile\\\">Upload</label>\\n      <form ngNoForm action=\\\"{{baseUrl}}/api/upload\\\" method=\\\"post\\\" enctype=\\\"multipart/form-data\\\">\\n        <input  name=\\\"myFile\\\"   type=\\\"file\\\" class=\\\"form-control\\\"  id=\\\"exampleInputFile\\\"/>\\n        <input  name=\\\"dishId\\\" value=\\\"{{dishId}}\\\"   style=\\\"display: none\\\"/>\\n        <button type=\\\"submit\\\" class=\\\"btn btn-block btn-primary\\\">Upload Image</button>\\n        <br/>\\n      </form>\\n    </div>\\n  </form>\\n\\n  <button class=\\\"btn btn-danger  btn-block\\\" (click)=\\\"deleteDish()\\\">Delete</button>\\n</div>\\n\\n<nav class=\\\"navbar fixed-bottom cl-grey-navbar\\\">\\n  <div class=\\\"container-fluid justify-content-end\\\">\\n    <a routerLink=\\\"restaurant/home\\\" class=\\\"navbar-brand cl-icon-padding cl-text-blue\\\">\\n      <span class=\\\"fas fa-user\\\"></span>\\n    </a>\\n  </div>\\n</nav>\\n\"","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {Menu} from \"../../../model/restaurant.client.model\";\nimport {NgForm} from \"@angular/forms\";\nimport {environment} from \"../../../../environments/environment\";\nimport {SharedService} from \"../../../services/shared.service\";\nimport {MenuService} from \"../../../services/menu.service.client\";\n\n@Component({\n  selector: 'app-menu-edit',\n  templateUrl: './menu-edit.component.html',\n  styleUrls: ['./menu-edit.component.css']\n})\nexport class MenuEditComponent implements OnInit {\n\n  @ViewChild('f') imageForm: NgForm;\n  dishId: String;\n  name: String;\n  description: String;\n  url: String;\n  dish: any = {};\n  baseUrl: String = environment.baseUrl;\n  dishErrorFlag: boolean;\n  priceErrorFlag:boolean;\n  dishErrorMsg = \"Dish name can't be empty!\";\n  priceErrorMsg = \"Price can't be empty!\";\n\n  constructor(private activatedRoute: ActivatedRoute,\n              private sharedService: SharedService,\n              private menuService: MenuService,\n              private route: Router) {\n    //this.dish = new Menu('',  '',0,'','');\n  }\n\n  ngOnInit() {\n    this.dishErrorFlag = false;\n    this.priceErrorFlag = false;\n    this.activatedRoute.params.subscribe(params => {\n      this.dishId = params['did'];\n    });\n    if(this.dishId !== 'new'){\n      this.menuService.findDishById(this.dishId).subscribe(\n          (dish: Menu) => {\n            this.dish = dish;\n          }\n      )\n    }\n  }\n  updateDish() {\n    if (!this.dish.dish_name) {\n      this.dishErrorFlag = true;\n      return;\n    }\n    if (!this.dish.price) {\n      this.priceErrorFlag = true;\n      return;\n    }\n\n    if (this.dishId === 'new') {\n      this.menuService.createDish(this.dish).subscribe(\n          (dish: Menu) => {\n            console.log('create dish !');\n            this.route.navigate(['../'], {relativeTo: this.activatedRoute});\n          },\n          (error: any) => console.log(error)\n      );\n    } else {\n      this.menuService.updateDish(this.dish._id, this.dish).subscribe(\n          (dish: Menu) => {\n            console.log('update dish !');\n            this.route.navigate(['../'], {relativeTo: this.activatedRoute});\n          },\n          (error: any) => console.log(error)\n      );\n    }\n  }\n\n  deleteDish() {\n    this.menuService.deleteDish(this.dishId).subscribe(\n        () => this.route.navigate(['../'], {relativeTo: this.activatedRoute})\n    );\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcmVzdGF1cmFudC9tZW51L21lbnUuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<nav class=\\\"navbar fixed-top cl-grey-navbar\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <div>\\n      <a routerLink=\\\"../home\\\"\\n         class=\\\"navbar-brand cl-text-black cl-icon-padding\\\">\\n        <i class=\\\"fas fa-angle-left\\\"></i>\\n      </a>\\n      <h1 class=\\\"navbar-brand cl-text-black cl-text-bold cl-text-grey\\\">\\n        Menu\\n      </h1>\\n    </div>\\n    <a routerLink=\\\"./new\\\"\\n       class=\\\"navbar-brand cl-text-black float-right cl-icon-padding\\\">\\n      <i class=\\\"fas fa-plus\\\"></i>\\n    </a>\\n  </div>\\n</nav>\\n\\n<div class=\\\"container cl-container-padding-more\\\">\\n  <div appSortable (newIndexes) = \\\"onNewIndexes($event)\\\">\\n    <div *ngFor=\\\"let dish of dishes\\\">\\n      <div class=\\\"float-right\\\">\\n        <a class=\\\"float-right cl-text-blue fa fa-bars\\\"></a>\\n        <a routerLink=\\\"/restaurant/menu/{{dish._id}}\\\"\\n           class=\\\"fa fa-cog cl-text-blue\\\"></a>\\n      </div>\\n      <p>{{dish.dish_name}}</p>\\n      <p>{{dish.price}}</p>\\n      <p>{{dish.description}}</p>\\n      <img class=\\\"img-responsive img-rounded cl-widget-images\\\" src=\\\"{{dish.url}}\\\">\\n\\n    </div>\\n</div>\\n</div>\\n\\n  <nav class=\\\"navbar fixed-bottom cl-grey-navbar\\\">\\n    <div class=\\\"container-fluid\\\">\\n      <a routerLink=\\\"/profile\\\" class=\\\"navbar-brand cl-icon-padding cl-text-blue float-right\\\">\\n        <i class=\\\"fas fa-user cl-text-blue\\\"></i>\\n      </a>\\n    </div>\\n  </nav>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {Menu} from '../../../model/restaurant.client.model';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {SharedService} from '../../../services/shared.service';\nimport {MenuService} from '../../../services/menu.service.client';\n\n@Component({\n  selector: 'app-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.css']\n})\nexport class MenuComponent implements OnInit {\n  userId: String;\n  dishes: Menu[];\n  startIndex: Number;\n  endIndex: Number;\n  constructor(private  menuService: MenuService,\n              private sharedService: SharedService,\n              private router: Router,\n              private route: ActivatedRoute) {\n    this.startIndex = 0;\n    this.endIndex = 0;\n  }\n\n  ngOnInit() {\n    // this.userId = this.sharedService.user._id;\n    this.menuService.findAllDishesForRestaurant().subscribe(\n        (dishes: any) => {\n          this.dishes = dishes;\n          console.log(this.dishes);\n        }\n    );\n  }\n\n  onNewIndexes(newIndexes) {\n    this.startIndex = newIndexes.startIndex;\n    this.endIndex = newIndexes.endIndex;\n    this.menuService.reorderDishes(this.startIndex, this.endIndex, this.dishes)\n        .subscribe();\n  }\n\n  refresh() {\n    this.router.navigate(['restaurant/menu']);\n\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcmVzdGF1cmFudC9yZXN0YXVyYW50LWhvbWUvcmVzdGF1cmFudC1ob21lLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div *ngIf=\\\"errorFlag\\\"\\n     class=\\\"alert alert-danger text-center\\\">\\n  {{errorMsg}}\\n</div>\\n\\n<body>\\n<nav class=\\\"navbar fixed-top cl-blue-navbar\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <div class=\\\"navbar-header\\\">\\n      <h1 class=\\\"cl-text-white navbar-brand cl-text-bold\\\">\\n        Restaurant Home Page\\n      </h1>\\n    </div>\\n  </div>\\n</nav>\\n\\n<div class=\\\"container\\\">\\n  <button class=\\\"btn btn-primary btn-block\\\"\\n          routerLink=\\\"/restaurant/currentorders\\\">Current Orders\\n  </button>\\n  <br/>\\n  <button class=\\\"btn btn-primary btn-block\\\"\\n          routerLink=\\\"/restaurant/profile\\\">Profile\\n  </button>\\n  <button class=\\\"btn btn-primary btn-block\\\"\\n          routerLink=\\\"/restaurant/menu\\\">Menu\\n  </button>\\n  <button class=\\\"btn btn-primary btn-block\\\"\\n          routerLink=\\\"/restaurant/orderhistory\\\">Order History\\n  </button>\\n  <button class=\\\"btn btn-danger  btn-block\\\"\\n          (click)=\\\"logout()\\\" routerLinkActive=\\\"active\\\">Logout\\n  </button>\\n  <button class=\\\"btn btn-danger  btn-block\\\"\\n          (click)=\\\"deleteUser()\\\" routerLinkActive=\\\"active\\\">Delete\\n  </button>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {RestaurantService} from \"../../../services/restaurant.service.client\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {SharedService} from \"../../../services/shared.service\";\nimport {Restaurant} from \"../../../model/restaurant.client.model\";\nimport {UserService} from \"../../../services/user.service.client\";\n\n@Component({\n  selector: 'app-restaurant-home',\n  templateUrl: './restaurant-home.component.html',\n  styleUrls: ['./restaurant-home.component.css']\n})\nexport class RestaurantHomeComponent implements OnInit {\n  restaurant: Restaurant;\n  restaurantId: String;\n\n  constructor(private restaurantService: RestaurantService,\n              private userService: UserService,\n              private route: ActivatedRoute,\n              private router: Router,\n              private sharedService: SharedService) {\n    this.restaurant = new Restaurant('', '', '', '', '', '', '', [], []);\n  }\n\n  ngOnInit() {\n    this.restaurant = this.sharedService.user;\n    this.restaurantId = this.sharedService.user._id;\n  }\n\n  deleteUser() {\n    this.restaurantService.deleteRestaurant(this.restaurant._id).subscribe(\n        (restaurant: Restaurant) => {\n          console.log('delete user: ' + this.restaurant._id);\n          this.router.navigate(['/login']);\n        },\n        (error: any) => console.log(error)\n    );\n  }\n\n  logout() {\n    this.userService.logout().subscribe((data: any) => {\n      this.sharedService.user = null;\n      this.router.navigate(['/login']);\n    });\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcmVzdGF1cmFudC9yZXN0YXVyYW50LW9yZGVyLWhpc3Rvcnkvb3JkZXItaGlzdG9yeS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<nav class=\\\"navbar fixed-top cl-grey-navbar\\\">\\n    <div class=\\\"container-fluid\\\">\\n        <div>\\n            <a routerLink=\\\"../home\\\"\\n               class=\\\"navbar-brand cl-text-black cl-icon-padding\\\">\\n                <i class=\\\"fas fa-angle-left\\\"></i>\\n            </a>\\n            <h1 class=\\\"navbar-brand cl-text-black cl-text-bold cl-text-grey\\\">\\n                Order History\\n            </h1>\\n        </div>\\n        <a routerLink=\\\"./new\\\"\\n           class=\\\"navbar-brand cl-text-black float-right cl-icon-padding\\\">\\n            <i class=\\\"fas fa-plus\\\"></i>\\n        </a>\\n    </div>\\n</nav>\\n\\n<div class=\\\"container cl-container-padding-more\\\">\\n\\n    <table class=\\\"table table-striped\\\">\\n        <thead>\\n        <tr>\\n            <th scope=\\\"col\\\">#</th>\\n            <th scope=\\\"col\\\">Date</th>\\n            <th scope=\\\"col\\\">Total</th>\\n            <th scope=\\\"col\\\">Details</th>\\n        </tr>\\n        </thead>\\n\\n        <tbody *ngFor=\\\"let order of orders; index as i\\\">\\n        <tr>\\n            <th scope=\\\"row\\\">{{i + 1}}</th>\\n            <td>{{order.time}}</td>\\n            <td>{{order.user}}</td>\\n            <td>{{order.details.total}}</td>\\n            <td><a routerLink=\\\"/restaurant/order/{{order._id}}\\\" class=\\\"badge badge-info\\\">click to view</a></td>\\n        </tr>\\n        </tbody>\\n    </table>\\n\\n</div>\\n\\n<nav class=\\\"navbar fixed-bottom cl-grey-navbar\\\">\\n    <div class=\\\"container-fluid\\\">\\n        <a routerLink=\\\"restaurant/home\\\" class=\\\"navbar-brand cl-icon-padding cl-text-blue float-right\\\">\\n            <i class=\\\"fas fa-user cl-text-blue\\\"></i>\\n        </a>\\n    </div>\\n</nav>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {Order} from \"../../../model/order.client.model\";\nimport {RestaurantService} from \"../../../services/restaurant.service.client\";\nimport {SharedService} from \"../../../services/shared.service\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {Restaurant} from \"../../../model/restaurant.client.model\";\nimport {OrderService} from \"../../../services/order.service.client\";\n\n@Component({\n  selector: 'app-order-history',\n  templateUrl: './order-history.component.html',\n  styleUrls: ['./order-history.component.css']\n})\nexport class RestaurantOrderHistoryComponent implements OnInit {\n  orders: Order[];\n  employeeId: String;\n\n  constructor(private  orderService: OrderService,\n              private sharedService: SharedService,\n              private router: Router,\n              private route: ActivatedRoute) { }\n\n  ngOnInit() {\n    this.employeeId = this.sharedService.user._id;\n    // this.orderService.findAllOrders().subscribe(\n    //     (orders: any) => {\n    //       this.orders = orders;\n    //     }\n    // )\n\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcmVzdGF1cmFudC9yZXN0YXVyYW50LXByb2ZpbGUvcmVzdGF1cmFudC1wcm9maWxlLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div *ngIf=\\\"errorFlag\\\"\\nclass=\\\"alert alert-danger text-center\\\">\\n{{errorMsg}}\\n</div>\\n\\n<body>\\n<nav class=\\\"navbar fixed-top cl-blue-navbar\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <div class=\\\"navbar-header\\\">\\n      <h1 class=\\\"cl-text-white navbar-brand cl-text-bold\\\">\\n        Restaurant Profile\\n      </h1>\\n    </div>\\n\\n    <div class=\\\"navibar-header\\\">\\n      <a (click)=\\\"updateRestaurant(restaurant)\\\" style=\\\"cursor:pointer\\\" class=\\\"navbar-brand ml-auto\\\">\\n        <i class=\\\"fas fa-check cl-text-white\\\"></i>\\n      </a>\\n    </div>\\n\\n  </div>\\n</nav>\\n\\n<div class=\\\"container\\\">\\n  <p> Account info</p>\\n  <div class=\\\"form-group cl-text-bold\\\">\\n    <label>Username</label>\\n    <input [(ngModel)]=\\\"restaurant.username\\\" name=\\\"username\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"alice\\\">\\n  </div>\\n  <div class=\\\"form-group cl-text-bold\\\">\\n    <label>Email address</label>\\n    <input [(ngModel)]=\\\"restaurant.email\\\" name=\\\"email\\\" type = \\\"email\\\" class=\\\"form-control\\\" placeholder=\\\"abc@gmail.com\\\">\\n  </div>\\n  <div class=\\\"form-group cl-text-bold\\\">\\n    <label>Phone</label>\\n    <input [(ngModel)]=\\\"restaurant.phone\\\" name=\\\"phone\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Alice\\\">\\n  </div>\\n\\n  <p>Restaurant Information</p>\\n  <div class=\\\"form-group cl-text-bold\\\">\\n    <label>Name</label>\\n    <input [(ngModel)]=\\\"restaurant.name\\\" name=\\\"name\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Wander\\\">\\n  </div>\\n\\n  <div class=\\\"form-group cl-text-bold\\\">\\n    <label>Address</label>\\n    <input [(ngModel)]=\\\"restaurant.address\\\" name=\\\"address\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Wander\\\">\\n  </div>\\n  <div class=\\\"form-group cl-text-bold\\\">\\n    <label>Type</label>\\n    <input [(ngModel)]=\\\"restaurant.type\\\" name=\\\"type\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Wander\\\">\\n  </div>\\n  <button class=\\\"btn btn-primary btn-block\\\"\\n          routerLink=\\\"../restaurant/{{restaurant._id}}/website\\\">Menu\\n  </button>\\n  <button class=\\\"btn btn-danger  btn-block\\\"\\n          (click)=\\\"logout()\\\" routerLinkActive=\\\"active\\\">Logout\\n  </button>\\n  <!--<button class=\\\"btn btn-danger  btn-block\\\"-->\\n          <!--(click)=\\\"deleteUser()\\\" routerLinkActive=\\\"active\\\">Delete-->\\n  <!--</button>-->\\n\\n</div>\\n\\n\\n<nav class=\\\"navbar fixed-bottom cl-blue-navbar\\\">\\n  <div class=\\\"container-fluid justify-content-end\\\">\\n    <a href=\\\"#\\\" routerLink=\\\"/profile\\\" class=\\\"navbar-brand cl-text-white cl-icon-padding\\\">\\n      <span class=\\\"fas fa-user\\\"></span>\\n    </a>\\n  </div>\\n</nav>\\n\\n</body>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {SharedService} from '../../../services/shared.service';\nimport {RestaurantService} from '../../../services/restaurant.service.client';\nimport {Restaurant} from \"../../../model/restaurant.client.model\";\n\n@Component({\n  selector: 'app-restaurant-profile',\n  templateUrl: './restaurant-profile.component.html',\n  styleUrls: ['./restaurant-profile.component.css']\n})\nexport class RestaurantProfileComponent implements OnInit {\n  errorMsg = 'Invalid email address !';\n\n  constructor(private restaurantService: RestaurantService,\n               private route: ActivatedRoute,\n               private router: Router,\n               private sharedService: SharedService) {\n        this.restaurant = new Restaurant('', '', '', '', '', '', '', [], []);\n    }\n\n  restaurantId: String;\n  restaurant: Restaurant;\n  username: String;\n  updateFlag: boolean;\n  updateMsg: String;\n  userErrorFlag: boolean;\n  userErrorMsg: String;\n\n  updateRestaurant(restaurant: Restaurant) {\n    this.updateFlag = false;\n    this.userErrorFlag = false;\n    if (this.username !== this.restaurant.username) {\n      this.restaurantService.findRestaurantByUsername(this.username).subscribe(\n          (restaurant: Restaurant) => {\n            if (typeof restaurant._id !== 'undefined') {\n              this.userErrorFlag = true;\n            } else {\n              this.restaurant.username = this.username;\n              this.updateProfile();\n            }\n          },\n          (error: any) => console.log(error)\n      );\n    } else {\n      this.updateProfile();\n    }\n  }\n\n  updateProfile() {\n    this.restaurantService.updateRestaurant(this.restaurant._id, this.restaurant).subscribe(\n        (restaurant: Restaurant) => {\n          console.log(restaurant);\n          this.restaurant = restaurant;\n          this.updateFlag = true;\n        },\n        (error: any) => {\n          console.log(error);\n        }\n    );\n  }\n\n  ngOnInit() {\n    this.restaurant = this.sharedService.user;\n    this.restaurantId = this.sharedService.user._id;\n    this.route.params.subscribe(params => {\n      this.updateFlag = false;\n      this.userErrorFlag = false;\n      this.updateMsg = 'Profile updated!';\n      this.userErrorMsg = 'The username already exists! Please use a different name.';\n      this.restaurantService.findRestaurantById(this.restaurantId).subscribe(\n          (restaurant: Restaurant) => {\n            console.log((restaurant));\n            this.restaurant = restaurant;\n            this.username = this.restaurant.username;\n          },\n          (error: any) => console.log(error)\n      );\n    });\n  }\n\n}\n\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvdXNlci9jaGVja291dC9jaGVja291dC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div *ngIf=\\\"errorFlag\\\"\\n     class=\\\"alert alert-danger text-center\\\">\\n  {{errorMsg}}\\n</div>\\n\\n<nav class=\\\"navbar fixed-top cl-grey-navbar\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <div>\\n      <a routerLink=\\\"/user/{{userId}}/profile\\\" class=\\\"navbar-brand cl-text-black cl-icon-padding\\\">\\n        <i class=\\\"fas fa-angle-left\\\"></i>\\n      </a>\\n      <h1 class=\\\"navbar-brand cl-text-black cl-text-bold cl-text-grey\\\">\\n        Check out\\n      </h1>\\n    </div>\\n    <a (click)=\\\"updateOrder()\\\" class=\\\"navbar-brand cl-text-black float-right cl-icon-padding\\\">\\n      <i class=\\\"fas fa-check\\\"></i>\\n    </a>\\n  </div>\\n</nav>\\n\\n<div class=\\\"container cl-container-padding-more\\\">\\n  <div class=\\\"container cl-container-padding-more\\\">\\n\\n    <table class=\\\"table table-striped\\\">\\n      <thead>\\n      <tr>\\n        <th scope=\\\"col\\\">Dish name</th>\\n        <th scope=\\\"col\\\">Price</th>\\n        <th scope=\\\"col\\\">Quantity</th>\\n        <th scope=\\\"col\\\">Picture</th>\\n        <th scope=\\\"col\\\"></th>\\n      </tr>\\n      </thead>\\n  <tbody *ngFor=\\\"let dish of order.details.dishes; index as i\\\">\\n        <p>{{dish.dish_name}}</p>\\n        <p>{{dish.price}}</p>\\n        <p>{{order.details.quantity[i]}}</p>\\n        <img class=\\\"img-responsive img-rounded cl-widget-images\\\" src=\\\"{{dish.url}}\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"dish-num\\\">Quantity</label>\\n          <input [(ngModel)]=\\\"order.details.quantity[i]\\\"\\n                 name = \\\"quantity\\\"\\n                 type=\\\"text\\\"\\n                 class=\\\"form-control\\\"\\n                 id=\\\"dish-num\\\"\\n                 placeholder=\\\"quantity\\\"/>\\n          <button type=\\\"submit\\\" class=\\\"btn btn-block btn-primary\\\">change quantities</button>\\n        </div>\\n\\n      </tbody>\\n  <button class=\\\"btn btn-danger  btn-block\\\" (click)=\\\"deleteOrder()\\\">Delete</button>\\n</div>\\n\\n\\n\\n<nav class=\\\"navbar fixed-bottom cl-grey-navbar\\\">\\n  <div class=\\\"container-fluid justify-content-end\\\">\\n    <a routerLink=\\\"restaurant/home\\\" class=\\\"navbar-brand cl-icon-padding cl-text-blue\\\">\\n      <span class=\\\"fas fa-user\\\"></span>\\n    </a>\\n  </div>\\n</nav>\\n\"","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {NgForm} from '@angular/forms';\nimport {environment} from '../../../../environments/environment';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {SharedService} from '../../../services/shared.service';\nimport {OrderService} from '../../../services/order.service.client';\nimport {Order} from '../../../model/order.client.model';\n\n@Component({\n  selector: 'app-checkout',\n  templateUrl: './checkout.component.html',\n  styleUrls: ['./checkout.component.css']\n})\nexport class CheckoutComponent implements OnInit {\n\n\n  @ViewChild('f') imageForm: NgForm;\n  userId: String;\n  order: Order;\n  name: String;\n  description: String;\n  orderId: String;\n  numErrorFlag:boolean;\n  numErrorMsg = 'Invalid number!';\n\n  constructor(private activatedRoute: ActivatedRoute,\n              private sharedService: SharedService,\n              private orderService: OrderService,\n              private route: Router) {\n  }\n\n  ngOnInit() {\n    this.numErrorFlag = false;\n    this.activatedRoute.params.subscribe(params => {\n      this.userId = params['uid'];\n    });\n    this.orderService.findCartorderByUser(this.userId).subscribe(\n        (order: any) => {\n          this.order = order;\n          this.orderId = order._id;\n        });\n\n  }\n\n\n\n  updateOrder() {\n    if (!this.order.details.quantity) {\n      this.numErrorFlag = true;\n      return;\n    }\n    if (this.order.details === null) {\n      this.orderService.deleteOrder(this.userId,this.orderId);\n    } else {\n      this.orderService.updateOrder(this.userId,this.orderId, this.order).subscribe(\n          () => {\n            console.log('update order!');\n            this.route.navigate(['../'], {relativeTo: this.activatedRoute});\n          },\n          (error: any) => console.log(error)\n      );\n    }\n  }\n\n  deleteOrder() {\n    this.orderService.deleteOrder(this.userId, this.orderId).subscribe(\n        () => this.route.navigate(['../'], {relativeTo: this.activatedRoute})\n    );\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvdXNlci9tZW51L21lbnUuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div *ngIf=\\\"errorFlag\\\"\\n     class=\\\"alert alert-danger text-center\\\">\\n  {{errorMsg}}\\n</div>\\n\\n<nav class=\\\"navbar fixed-top cl-grey-navbar\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <div>\\n      <a routerLink=\\\"/delivery/{{userId}}/profile\\\" class=\\\"navbar-brand cl-text-black cl-icon-padding\\\">\\n        <i class=\\\"fas fa-angle-left\\\"></i>\\n      </a>\\n      <h1 class=\\\"navbar-brand cl-text-black cl-text-bold cl-text-grey\\\">\\n        Check out\\n      </h1>\\n    </div>\\n    <a (click)=\\\"updateOrder()\\\" class=\\\"navbar-brand cl-text-black float-right cl-icon-padding\\\">\\n      <i class=\\\"fas fa-check\\\"></i>\\n    </a>\\n  </div>\\n</nav>\\n\\n<div class=\\\"container cl-container-padding-more\\\">\\n  <div appSortable (newIndexes) = \\\"onNewIndexes($event)\\\">\\n    <div *ngFor=\\\"let dish of dishes\\\">\\n      <div class=\\\"float-right\\\">\\n        <a class=\\\"float-right cl-text-blue fa fa-bars\\\"></a>\\n        <a routerLink=\\\"/restaurant/menu/{{dish._id}}\\\"\\n           class=\\\"fa fa-cog cl-text-blue\\\"></a>\\n<!--        <a class=\\\"float-right cl-text-blue fa fa-bars\\\"></a>\\n        <a routerLink=\\\"/restaurant/menu/{{dish._id}}\\\"\\n           class=\\\"fa fa-cog cl-text-blue\\\"></a>修改数量-->\\n      </div>\\n      <p>{{dish.dish_name}}</p>\\n      <p>{{dish.price}}</p>\\n      <p>{{dish.description}}</p>\\n      <img class=\\\"img-responsive img-rounded cl-widget-images\\\" src=\\\"{{dish.url}}\\\">\\n\\n    </div>\\n  </div>\\n</div>\\n\\n<div class=\\\"container\\\">\\n  <form>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"dish-name\\\">Name</label>\\n      <input [(ngModel)]=\\\"order.dish[]\\\"\\n             name = \\\"name\\\"\\n             type=\\\"text\\\"\\n             class=\\\"form-control\\\"\\n             id=\\\"dish-name\\\"\\n             placeholder=\\\"name\\\"/>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"dish-price\\\">Price</label>\\n      <span>$</span>\\n      <input [(ngModel)]=\\\"dish.price\\\"\\n             name=\\\"width\\\"\\n             type=\\\"number\\\"\\n             class=\\\"form-control\\\"\\n             id=\\\"dish-price\\\"\\n             placeholder=\\\"Price\\\"/>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"dish-description\\\">Description</label>\\n      <textarea [(ngModel)]=\\\"dish.description\\\" name=\\\"description\\\" id=\\\"dish-description\\\" class=\\\"form-control\\\" rows=\\\"3\\\"\\n                placeholder=\\\"Description\\\"></textarea>\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"image-URL\\\">URL</label>\\n      <input [(ngModel)]=\\\"dish.url\\\"\\n             type=\\\"text\\\"\\n             name=\\\"url\\\"\\n             class=\\\"form-control\\\"\\n             id=\\\"image-URL\\\"\\n             placeholder=\\\"{{dish.url}}\\\"\\n             ngModel required\\n             #url=\\\"ngModel\\\"/>\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <form ngNoForm action=\\\"{{baseUrl}}/api/upload\\\" method=\\\"post\\\" enctype=\\\"multipart/form-data\\\">\\n        <input  name=\\\"dishId\\\" value=\\\"{{dishId}}\\\"   style=\\\"display: none\\\"/>\\n        <button type=\\\"submit\\\" class=\\\"btn btn-block btn-primary\\\">Upload Image</button>\\n        <br/>\\n      </form>\\n    </div>\\n  </form>\\n\\n  <button class=\\\"btn btn-danger  btn-block\\\" (click)=\\\"deleteDish()\\\">Delete</button>\\n</div>\\n\\n<nav class=\\\"navbar fixed-bottom cl-grey-navbar\\\">\\n  <div class=\\\"container-fluid justify-content-end\\\">\\n    <a routerLink=\\\"restaurant/home\\\" class=\\\"navbar-brand cl-icon-padding cl-text-blue\\\">\\n      <span class=\\\"fas fa-user\\\"></span>\\n    </a>\\n  </div>\\n</nav>\\n\"","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {NgForm} from '@angular/forms';\nimport {environment} from '../../../../environments/environment';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {SharedService} from '../../../services/shared.service';\nimport {OrderService} from '../../../services/order.service.client';\nimport {Order} from '../../../model/order.client.model';\n\n@Component({\n  selector: 'app-checkout',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.css']\n})\nexport class UsermenuComponent implements OnInit {\n//\n//\n//   @ViewChild('f') imageForm: NgForm;\n//   userId: String;\n//   name: String;\n//   description: String;\n//   url: String;\n//   dish: any = {};\n//   baseUrl: String = environment.baseUrl;\n//   dishErrorFlag: boolean;\n//   priceErrorFlag:boolean;\n//   dishErrorMsg = \"Dish name can't be empty!\";\n//   priceErrorMsg = \"Price can't be empty!\";\n//\n  constructor(private activatedRoute: ActivatedRoute,\n              private sharedService: SharedService,\n              private orderService: OrderService,\n              private route: Router) {\n    //const time = new Date();\n    //this.dish = new Order('',  time, 0, '', '');\n  }\n\n  ngOnInit() {\n    // this.dishErrorFlag = false;\n    // this.priceErrorFlag = false;\n    // this.activatedRoute.params.subscribe(params => {\n    //   this.userId = params['uid'];\n    // });\n    // this.orderService.findOrdersByUser()ById(this.dishId).subscribe(\n    //     (dish: Order.) => {\n    //       this.dish = dish;\n    //     });\n  }\n//\n//\n//   updateOrder() {\n//     if (!this.dish.dish_name) {\n//       this.dishErrorFlag = true;\n//       return;\n//     }\n//     if (!this.dish.price) {\n//       this.priceErrorFlag = true;\n//       return;\n//     }\n//\n//     if (this.dishId === 'new') {\n//       this.menuService.createDish(this.dish).subscribe(\n//           (dish: Menu) => {\n//             console.log('create dish !');\n//             this.route.navigate(['../'], {relativeTo: this.activatedRoute});\n//           },\n//           (error: any) => console.log(error)\n//       );\n//     } else {\n//       this.menuService.updateDish(this.dish._id, this.dish).subscribe(\n//           (dish: Menu) => {\n//             console.log('update dish !');\n//             this.route.navigate(['../'], {relativeTo: this.activatedRoute});\n//           },\n//           (error: any) => console.log(error)\n//       );\n//     }\n//   }\n//\n//   deleteDish() {\n//     this.menuService.deleteDish(this.dishId).subscribe(\n//         () => this.route.navigate(['../'], {relativeTo: this.activatedRoute})\n//     );\n//   }\n }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvdXNlci9vcmRlci9vcmRlci5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div *ngIf=\\\"errorFlag\\\"\\n     class=\\\"alert alert-danger text-center\\\">\\n  {{errorMsg}}\\n</div>\\n<nav class=\\\"navbar fixed-top cl-blue-navbar\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <div>\\n      <a routerLink=\\\"/user/{{userId}}/profile\\\" class=\\\"navbar-brand cl-text-black cl-icon-padding\\\">\\n        <i class=\\\"fas fa-angle-left\\\"></i>\\n      </a>\\n      <h1 class=\\\"navbar-brand cl-text-black cl-text-bold cl-text-grey\\\">\\n        Order details\\n      </h1>\\n    </div>\\n  </div>\\n</nav>\\n\\n<div class=\\\"container website-new-content\\\">\\n  <div class=\\\"card order-card\\\">\\n    <div class=\\\"card-header\\\">\\n      <strong>{{status}}</strong>\\n    </div>\\n    <div class=\\\"card-body\\\">\\n      <h5 class=\\\"card-title\\\">{{order.userAddress}}</h5>\\n      <div><strong>User</strong> {{order.user}}</div>\\n      <div><strong>User Address:</strong> {{order.userAddress}}</div>\\n      <div><strong>User Phone Number:</strong> {{order.phone}}</div>\\n      <div><strong>Time</strong> {{order.time}}</div>\\n      <div><strong>Status:</strong> {{status}}</div>\\n      <br>\\n      <div><strong>Details:</strong></div>\\n      <table class=\\\"table table-responsive table-bordered \\\">\\n        <thead>\\n        <tr>\\n          <th scope=\\\"col\\\">dish</th>\\n          <th scope=\\\"col\\\" *ngFor=\\\"let dish of order.details.dish\\\">{{dish}}</th>\\n        </tr>\\n        <tr>\\n          <th scope=\\\"col\\\">amount</th>\\n          <th scope=\\\"col\\\" *ngFor=\\\"let amount of order.details.quantity\\\">{{amount}}</th>\\n        </tr>\\n        </thead>\\n      </table>\\n      <div><strong>Total: $</strong>{{order.details.total}}</div>\\n      <br>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-10\\\">\\n          <agm-map [latitude]=\\\"lat\\\" [longitude]=\\\"lng\\\" style=\\\"height: 600px\\\">\\n            <agm-direction *ngIf=\\\"dir\\\" [origin]=\\\"dir.origin\\\" [destination]=\\\"dir.destination\\\" [markerOptions]=\\\"markerOptions\\\" [renderOptions]=\\\"renderOptions\\\"></agm-direction>\\n          </agm-map>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <nav class=\\\"navbar fixed-bottom cl-blue-navbar\\\">\\n    <div class=\\\"container-fluid justify-content-end\\\">\\n      <a href=\\\"#\\\" routerLink=\\\"/profile\\\" class=\\\"navbar-brand cl-text-white cl-icon-padding\\\">\\n        <span class=\\\"fas fa-user\\\"></span>\\n      </a>\\n    </div>\\n  </nav>\\n</div>\\n\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport {User} from '../../../model/user.client.model';\nimport {Order} from '../../../model/order.client.model';\nimport {ActivatedRoute} from '@angular/router';\nimport {SharedService} from '../../../services/shared.service';\n\n@Component({\n  selector: 'app-order',\n  templateUrl: './order.component.html',\n  styleUrls: ['./order.component.css']\n})\nexport class OrderComponent implements OnInit {\n  userId: string;\n  orderId: string;\n  user: User;\n  order: Order;\n  status: string;\n\n\n\n  constructor(private _activatedRoute: ActivatedRoute, private _sharedService: SharedService) { }\n\n  ngOnInit() {\n    this._activatedRoute.params.subscribe(params => {\n      this.userId = params['uid'];\n      this.orderId = params['oid'];\n      console.log('user id: ' + this.userId);\n\n      this.user = this._sharedService.user;\n      this.order = this._sharedService.selectedOrder;\n      if (this.order.status === 3) {\n        this.status = 'in transit';\n      } else if (this.order.status === 2) {\n        this.status = 'active';\n      } else if (this.order.status === 0){\n        this.status =  'incomplete';\n      } else if (this.order.status === 1) {\n        this.status = 'preparing';\n      } else if (this.order.status === 4) {\n        this.status = 'completed';\n      } else if (this.order.status === 5) {\n        this.status = 'cancelled';\n      }\n    });\n  }\n\n\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvdXNlci9vcmRlcmhpc3Rvcnkvb3JkZXJoaXN0b3J5LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<nav class=\\\"navbar fixed-top cl-blue-navbar\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <div>\\n      <a routerLink=\\\"../home\\\"\\n         class=\\\"navbar-brand cl-text-black cl-icon-padding\\\">\\n        <i class=\\\"fas fa-angle-left\\\"></i>\\n      </a>\\n      <h1 class=\\\"navbar-brand cl-text-black cl-text-bold cl-text-grey\\\">\\n        Order History\\n      </h1>\\n    </div>\\n    <a routerLink=\\\"./menu\\\"\\n       class=\\\"navbar-brand cl-text-black float-right cl-icon-padding\\\">\\n      <i class=\\\"fas fa-plus\\\"></i>\\n    </a>\\n  </div>\\n</nav>\\n\\n<div class=\\\"container cl-container-padding-more\\\">\\n\\n  <table class=\\\"table table-striped\\\">\\n    <thead>\\n    <tr>\\n      <th scope=\\\"col\\\">#</th>\\n      <th scope=\\\"col\\\">Date</th>\\n      <th scope=\\\"col\\\">Total</th>\\n      <th scope=\\\"col\\\">Details</th>\\n    </tr>\\n    </thead>\\n\\n    <tbody *ngFor=\\\"let order of orders; index as i\\\">\\n    <tr>\\n      <th scope=\\\"row\\\">{{i + 1}}</th>\\n      <td>{{order.time}}</td>\\n      <td>{{order.user}}</td>\\n      <td>{{order.details.total}}</td>\\n      <td><a routerLink=\\\"/user/{{user._id}}/order/{{order._id}}\\\" class=\\\"badge badge-info\\\">click to view</a></td>\\n    </tr>\\n    </tbody>\\n  </table>\\n\\n</div>\\n\\n<nav class=\\\"navbar fixed-bottom cl-blue-navbar\\\">\\n  <div class=\\\"container-fluid justify-content-end\\\">\\n    <a href=\\\"#\\\" routerLink=\\\"/profile\\\" class=\\\"navbar-brand cl-text-white cl-icon-padding\\\">\\n      <span class=\\\"fas fa-user\\\"></span>\\n    </a>\\n  </div>\\n</nav>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {Order} from '../../../model/order.client.model';\nimport {OrderService} from '../../../services/order.service.client';\nimport {SharedService} from '../../../services/shared.service';\nimport {ActivatedRoute, Router} from '@angular/router';\n\n@Component({\n  selector: 'app-orderhistory',\n  templateUrl: './orderhistory.component.html',\n  styleUrls: ['./orderhistory.component.css']\n})\nexport class OrderhistoryComponent implements OnInit {\n  orders: Order[];\n  employeeId: String;\n\n  constructor(private  orderService: OrderService,\n              private sharedService: SharedService,\n              private router: Router,\n              private route: ActivatedRoute) { }\n\n  ngOnInit() {\n    this.employeeId = this.sharedService.user._id;\n     this.orderService.findOrdersByUser(this.employeeId).subscribe(\n         (orders: any) => {\n           this.orders = orders;\n         }\n     );\n\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvdXNlci91c2VyLXByb2ZpbGUvdXNlci1wcm9maWxlLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div *ngIf=\\\"errorFlag\\\"\\n     class=\\\"alert alert-danger text-center\\\">\\n  {{errorMsg}}\\n</div>\\n\\n<body>\\n<nav class=\\\"navbar fixed-top cl-blue-navbar\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <div class=\\\"navbar-header\\\">\\n      <h1 class=\\\"cl-text-white navbar-brand cl-text-bold\\\">\\n        User Profile\\n      </h1>\\n    </div>\\n\\n    <div class=\\\"navibar-header\\\">\\n      <a (click)=\\\"updateUser(user)\\\" style=\\\"cursor:pointer\\\" class=\\\"navbar-brand ml-auto\\\">\\n        <i class=\\\"fas fa-check cl-text-white\\\"></i>\\n      </a>\\n    </div>\\n\\n  </div>\\n</nav>\\n\\n<div class=\\\"container\\\">\\n  <p> Account info</p>\\n  <div class=\\\"form-group cl-text-bold\\\">\\n    <label>Username</label>\\n    <input [(ngModel)]=\\\"user.username\\\" name=\\\"username\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"alice\\\">\\n  </div>\\n  <div class=\\\"form-group cl-text-bold\\\">\\n    <label>Email address</label>\\n    <input [(ngModel)]=\\\"user.email\\\" name=\\\"email\\\" type = \\\"email\\\" class=\\\"form-control\\\" placeholder=\\\"abc@gmail.com\\\">\\n  </div>\\n  <div class=\\\"form-group cl-text-bold\\\">\\n    <label>Phone</label>\\n    <input [(ngModel)]=\\\"user.phone\\\" name=\\\"phone\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Alice\\\">\\n  </div>\\n\\n  <p>user Information</p>\\n  <div class=\\\"form-group cl-text-bold\\\">\\n    <label>Password</label>\\n    <input [(ngModel)]=\\\"user.password\\\" name=\\\"password\\\" type=\\\"password\\\" class=\\\"form-control\\\" placeholder=\\\"Wander\\\">\\n  </div>\\n\\n  <div class=\\\"form-group cl-text-bold\\\">\\n    <label>Address</label>\\n    <input [(ngModel)]=\\\"user.address\\\" name=\\\"address\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Wander\\\">\\n  </div>\\n  <div class=\\\"form-group cl-text-bold\\\">\\n    <label>Credit card info</label>\\n    <input [(ngModel)]=\\\"user.credit_card_info\\\" name=\\\"credit_card_info\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Wander\\\">\\n  </div>\\n  <div class=\\\"form-group cl-text-bold\\\">\\n    <label>Billing info</label>\\n    <input [(ngModel)]=\\\"user.billing_info\\\" name=\\\"billing_info\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Wander\\\">\\n  </div>\\n  <button class=\\\"btn btn-primary btn-block\\\"\\n          routerLink=\\\"../user/{{user._id}}/orderhistory\\\">Order History\\n  </button>\\n  <button class=\\\"btn btn-danger  btn-block\\\"\\n          (click)=\\\"logout()\\\" routerLinkActive=\\\"active\\\">Logout\\n  </button>\\n  <!--<button class=\\\"btn btn-danger  btn-block\\\"-->\\n  <!--(click)=\\\"deleteUser()\\\" routerLinkActive=\\\"active\\\">Delete-->\\n  <!--</button>-->\\n\\n</div>\\n\\n\\n<nav class=\\\"navbar fixed-bottom cl-blue-navbar\\\">\\n  <div class=\\\"container-fluid justify-content-end\\\">\\n    <a href=\\\"#\\\" routerLink=\\\"/profile\\\" class=\\\"navbar-brand cl-text-white cl-icon-padding\\\">\\n      <span class=\\\"fas fa-user\\\"></span>\\n    </a>\\n  </div>\\n</nav>\\n\\n</body>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {UserService} from '../../../services/user.service.client';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {SharedService} from '../../../services/shared.service';\nimport {User} from '../../../model/user.client.model';\n\n@Component({\n  selector: 'app-user-profile',\n  templateUrl: './user-profile.component.html',\n  styleUrls: ['./user-profile.component.css']\n})\nexport class UserProfileComponent implements OnInit {\n\n  errorMsg = 'Invalid email address !';\n\n  constructor(private userService: UserService,\n              private route: ActivatedRoute,\n              private router: Router,\n              private sharedService: SharedService) {\n    this.user = new User('', '', '', '', '', '', '', '');\n  }\n\n  userId: String;\n  user: User;\n  username: String;\n  updateFlag: boolean;\n  updateMsg: String;\n  userErrorFlag: boolean;\n  userErrorMsg: String;\n\n  updateUser(user: User) {\n    this.updateFlag = false;\n    this.userErrorFlag = false;\n    if (this.username !== this.user.username) {\n      this.userService.findUserByUsername(this.username).subscribe(\n          (user: User) => {\n            if (typeof user._id !== 'undefined') {\n              this.userErrorFlag = true;\n            } else {\n              this.user.username = this.username;\n              this.updateProfile();\n            }\n          },\n          (error: any) => console.log(error)\n      );\n    } else {\n      this.updateProfile();\n    }\n  }\n\n  updateProfile() {\n    this.userService.updateUser(this.user._id, this.user).subscribe(\n        (user: User) => {\n          console.log(user);\n          this.user = user;\n          this.updateFlag = true;\n        },\n        (error: any) => {\n          console.log(error);\n        }\n    );\n  }\n\n  ngOnInit() {\n    this.user = this.sharedService.user;\n    this.userId = this.sharedService.user._id;\n    this.route.params.subscribe(params => {\n      this.updateFlag = false;\n      this.userErrorFlag = false;\n      this.updateMsg = 'Profile updated!';\n      this.userErrorMsg = 'The username already exists! Please use a different name.';\n      this.userService.findUserById(this.userId).subscribe(\n          (user: User) => {\n            console.log((user));\n            this.user = user;\n            this.username = this.user.username;\n          },\n          (error: any) => console.log(error)\n      );\n    });\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvd2Vic2l0ZS9ob21lL2hvbWUuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<p>\\n  Welcome to our restaurant !\\n</p>\\n<P>some photos and descrption here</P>\\n\\n<button class=\\\"btn btn-primary btn-block\\\"\\n        type=\\\"submit\\\"\\n        routerLink=\\\"/login\\\">Login\\n</button>\\n\\n<button class=\\\"btn btn-primary btn-block\\\"\\n        type=\\\"submit\\\"\\n        routerLink=\\\"/register\\\">Register\\n</button>\\n\\n<!--<button class=\\\"btn btn-primary btn-block\\\"-->\\n        <!--type=\\\"submit\\\"-->\\n        <!--routerLink=\\\"/menu\\\">View Menu-->\\n<!--</button>-->\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".example-radio-group {\\n    display: flex;\\n    flex-direction: row;\\n    margin: 15px 0;\\n}\\n\\n.example-radio-button {\\n    margin: 5px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy93ZWJzaXRlL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxhQUFhO0lBQ2IsbUJBQW1CO0lBQ25CLGNBQWM7QUFDbEI7O0FBRUE7SUFDSSxXQUFXO0FBQ2YiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL3dlYnNpdGUvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5leGFtcGxlLXJhZGlvLWdyb3VwIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gICAgbWFyZ2luOiAxNXB4IDA7XG59XG5cbi5leGFtcGxlLXJhZGlvLWJ1dHRvbiB7XG4gICAgbWFyZ2luOiA1cHg7XG59XG4iXX0= */\"","module.exports = \"<div *ngIf=\\\"errorFlag\\\"\\n     class=\\\"alert alert-danger\\\">\\n    {{errorMsg}}\\n</div>\\n<div class=\\\"container\\\">\\n    <h1>Login</h1>\\n\\n    <form (ngSubmit)=\\\"login()\\\" #f=\\\"ngForm\\\">\\n        <input placeholder=\\\"username\\\"\\n               name=\\\"username\\\"\\n               type=\\\"text\\\"\\n               class=\\\"form-control\\\"\\n               ngModel\\n               required\\n               #username=\\\"ngModel\\\"/>\\n        <span class=\\\"help-block\\\" *ngIf=\\\"!username.valid && username.touched\\\">\\n      Please enter username!\\n      </span>\\n\\n        <input placeholder=\\\"password\\\"\\n               name=\\\"password\\\"\\n               type=\\\"password\\\"\\n               class=\\\"form-control\\\"\\n               ngModel\\n               required\\n               #password=\\\"ngModel\\\"/>\\n        <span class=\\\"help-block\\\" *ngIf=\\\"!password.valid && password.touched\\\">\\n      Please enter password!\\n      </span>\\n\\n        <label id=\\\"example-radio-group-label\\\">Login as</label>\\n        <mat-radio-group\\n                aria-labelledby=\\\"example-radio-group-label\\\"\\n                class=\\\"example-radio-group\\\"\\n                [(ngModel)]=\\\"loginrole\\\"[ngModelOptions]=\\\"{standalone: true}\\\">\\n            <mat-radio-button class=\\\"example-radio-button\\\" *ngFor=\\\"let role of roles\\\" [value]=\\\"role\\\">\\n                {{role}}\\n            </mat-radio-button>\\n        </mat-radio-group>\\n\\n        <button class=\\\"btn btn-primary btn-block\\\"\\n                type=\\\"submit\\\"\\n                [disabled]=\\\"!f.valid\\\">Login\\n        </button>\\n        <button class=\\\"btn btn-success btn-block\\\"\\n                routerLink=\\\"/register\\\"\\n                type=\\\"submit\\\">Register\\n        </button>\\n    </form>\\n</div>\\n\\n\"","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {NgForm} from \"@angular/forms\";\nimport {environment} from \"../../../../environments/environment\";\nimport {UserService} from \"../../../services/user.service.client\";\nimport {Router} from \"@angular/router\";\nimport {SharedService} from \"../../../services/shared.service\";\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  @ViewChild('f') loginForm: NgForm;\n  username: String;\n  password: String;\n  errorFlag: boolean;\n  errorMsg = 'Invalid username or password !';\n  baseUrl = environment.baseUrl;\n  loginrole: string;\n  roles: string[] = ['Customer', 'Employee','Delivery', 'Admin'];\n\n  constructor(private userService: UserService,\n  private router: Router, private sharedService: SharedService) {\n  }\n\n  ngOnInit() {\n    console.log('Login page!' + this.username);\n  }\n  login() {\n    this.username = this.loginForm.value.username;\n    this.password = this.loginForm.value.password;\n    console.log('data', this.username);\n    this.userService.login(this.username, this.password,this.loginrole).subscribe(\n        (data: any) => {\n            this.sharedService.user = data;\n            if(this.loginrole === 'Customer'){\n                this.router.navigate(['user/home']);\n            }else if(this.loginrole === 'Delivery'){\n                this.router.navigate(['/deliver/' + data._id + '/home']);\n            }\n            }, (error: any) => {\n            this.errorFlag = true;\n        } )\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvd2Vic2l0ZS9yZWdpc3Rlci9yZWdpc3Rlci5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"container\\\">\\n  <h1>Register</h1>\\n  <form\\n          (ngSubmit)=\\\"register()\\\"\\n          #form='ngForm'>\\n    <div class=\\\"form-group\\\">\\n      <input\\n              type=\\\"text\\\"\\n              name=\\\"username\\\"\\n              class=\\\"form-control\\\"\\n              placeholder=\\\"username\\\"\\n              [(ngModel)]=\\\"newUsername\\\"\\n              required\\n              #username=\\\"ngModel\\\">\\n      <span\\n              class=\\\"help-block\\\"\\n              *ngIf=\\\"!username.valid && username.touched\\\">\\n        Please enter a valid username\\n      </span>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <input\\n              type=\\\"password\\\"\\n              name=\\\"password\\\"\\n              class=\\\"form-control\\\"\\n              placeholder=\\\"password\\\"\\n              [(ngModel)]=\\\"newPassword\\\"\\n              required\\n              #password=\\\"ngModel\\\">\\n      <span\\n              class=\\\"help-block\\\"\\n              *ngIf=\\\"!password.valid && password.touched\\\">\\n        Please enter a valid password\\n      </span>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <input\\n              type=\\\"password\\\"\\n              name=\\\"verifiedPassword\\\"\\n              class=\\\"form-control\\\"\\n              placeholder=\\\"verify password\\\"\\n              [(ngModel)]=\\\"regVerifiedPassword\\\"\\n              required\\n              #verifiedPassword=\\\"ngModel\\\">\\n      <span\\n              class=\\\"help-block\\\"\\n              *ngIf=\\\"(newPassword !== regVerifiedPassword || !verifiedPassword.valid) && verifiedPassword.touched\\\">\\n        Password mis-matching !\\n      </span>\\n    </div>\\n    <label id=\\\"example-radio-group-label\\\">Register as</label>\\n    <mat-radio-group\\n            aria-labelledby=\\\"example-radio-group-label\\\"\\n            class=\\\"example-radio-group\\\"\\n            [(ngModel)]=\\\"registerRole\\\"[ngModelOptions]=\\\"{standalone: true}\\\">\\n      <mat-radio-button class=\\\"example-radio-button\\\" *ngFor=\\\"let role of roles\\\" [value]=\\\"role\\\">\\n        {{role}}\\n      </mat-radio-button>\\n    </mat-radio-group>\\n    <div class=\\\"form-group\\\">\\n      <button\\n              class=\\\"btn btn-primary btn-block\\\"\\n              type=\\\"submit\\\"\\n              [disabled]=\\\"!form.valid || newPassword !== regVerifiedPassword\\\">\\n        Register\\n      </button>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <button class=\\\"btn btn-danger btn-block cl-text-white\\\" (click)=\\\"onCancel()\\\">Cancel</button>\\n    </div>\\n  </form>\\n</div>\\n\"","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {Router} from \"@angular/router\";\nimport {UserService} from \"../../../services/user.service.client\";\nimport {NgForm} from \"@angular/forms\";\nimport {User} from \"../../../model/user.client.model\";\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  @ViewChild('form') signupForm: NgForm;\n  newUsername: String;\n  newPassword: String;\n  regVerifiedPassword: String;\n  user: any = {_id: '', username: '', password: '', userType: ''};\n  userErrorMsg: String;\n  userErrorFlag: boolean;\n  registerRole: string;\n  roles: string[] = ['Customer', 'Employee','Delivery'];\n  //roleErrorFlag: boolean\n\n  constructor(private userService: UserService, private router: Router) {\n  }\n\n  ngOnInit() {\n    this.userErrorFlag = false;\n    this.userErrorMsg = 'The username already exists! Please use a different name.';\n  }\n\n  register() {\n    this.user.username = this.newUsername;\n    this.user.password = this.newPassword;\n    console.log(this.registerRole);\n\n      this.userService.register(this.user.username, this.user.password,this.registerRole)\n          .subscribe(\n              (data: any) => {\n                  console.log('input: ' + data);\n                if (data) {\n                    if(this.registerRole === 'Customer'){\n                        this.router.navigate(['user/home']);\n                    }else if(this.registerRole === 'Employee'){\n                        this.router.navigate(['restaurant/home'])\n                    }\n\n                } else {\n                  this.userErrorFlag = true;\n                  console.log(this.userErrorFlag);\n                }\n              },\n              (error: any) => {\n                if (error) {\n                  console.log(error);\n                }\n              }\n          );\n  }\n\n  onCancel() {\n    this.router.navigate(['/login']);\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvd2Vic2l0ZS9yZXN0YXVyYW50L3Jlc3RhdXJhbnQuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<p>\\n  restaurant works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-restaurant',\n  templateUrl: './restaurant.component.html',\n  styleUrls: ['./restaurant.component.css']\n})\nexport class RestaurantComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import {Order} from \"./order.client.model\";\n\nexport class Menu {\n    _id: String;\n    dish_name: String;\n    price: Number;\n    description: String;\n    url: String;\n\n    constructor(id: String, name: String, price: Number, description: String, url: String) {\n        this._id = id;\n        this.description = description;\n        this.dish_name = name;\n        this.price = price;\n        this.url = url;\n    }\n\n}\n\n\nexport class Restaurant {\n    _id: String;\n    username: String;\n    password: String;\n    name: String;\n    email: String;\n    address: String;\n    phone: String;\n    type: String;\n    orders: Order[];\n    menus: Menu[];\n\n\n    constructor(username: String, password: String,name: String, email: String, address: String, phone: String, type: String, orders: Order[], menus: Menu[]) {\n        this.username = username;\n        this.password = password;\n        this.name = name;\n        this.email = email;\n        this.address = address;\n        this.phone = phone;\n        this.type = type;\n        this.orders = orders;\n        this.menus = menus;\n    }\n}\n","import {Order} from \"./order.client.model\";\n\nexport class User {\n    _id: String;\n    username: String;\n    password: String;\n    email: String;\n    address: String;\n    phone: String;\n    credit_card_info: String;\n    billing_info: String;\n    order_history: Order[];\n\n\n    constructor(_id: String, username: String, password: String, email: String, address: String, phone: String, credit_card_info: String,\n                billing_info: String) {\n        this._id = _id;\n        this.username = username;\n        this.password = password;\n        this.email = email;\n        this.address = address;\n        this.phone = phone;\n        this.credit_card_info = credit_card_info;\n        this.billing_info = billing_info;\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {CanActivate, Router} from '@angular/router';\nimport {UserService} from \"./user.service.client\";\n\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n    constructor(private userService: UserService) {\n    }\n\n    canActivate() {\n        return this.userService.loggedIn();\n    }\n\n    // make sure to import AuthGuard in app.routing.ts and app.module.ts.\n    // in app.module.ts, need to register AuthGuard as Provider.\n}\n","import {Injectable} from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '../../environments/environment';\nimport { Order } from '../model/order.client.model';\nimport { Observable, ObjectUnsubscribedError } from 'rxjs';\n\n@Injectable()\nexport class DeliverService {\n\n    constructor(private http: HttpClient) {}\n\n    api = {\n        'acceptOrder' : this.acceptOrder,\n        'completeOrder' : this.completeOrder,\n        'cancelOrder' : this.cancelOrder,\n        'findInTransitOrder' : this.findInTransitOrder,\n        'findAllPendingOrder' : this.findAllPendingOrder\n    };\n\n    public mapAPIKey = 'AIzaSyBtrCeFbuL6cSgjC2UyJsaJuJoXKXAmQQM';\n\n    acceptOrder(deliverId: string, orderId: string, status: string) {\n        // return this.http.put( environment.baseUrl + '/api/deliver/' + deliverId + '/order/' + orderId + '/accept', {});\n        return new Observable((observer) => {\n            observer.next({content: true});\n            return {unsubscribe() {}};\n        });\n    }\n\n    completeOrder(deliverId: string, orderId: string, status: string) {\n        // return this.http.put( environment.baseUrl + '/api/deliver/' + deliverId + '/order/' + orderId + '/complete', {});\n        return new Observable((observer) => {\n            observer.next({content: true});\n            return {unsubscribe() {}};\n        });\n    }\n\n    cancelOrder(deliverId: string, orderId: string, status: string) {\n        // return this.http.put( environment.baseUrl + '/api/deliver/' + deliverId + '/order/' + orderId + '/cancel', {});\n        return new Observable((observer) => {\n            observer.next({content: true});\n            return {unsubscribe() {}};\n        });\n    }\n\n    findInTransitOrder(deliverId: string) {\n        // return this.http.get(environment.baseUrl + '/api/deliver/' + deliverId + '/currentOrder');\n        return new Observable((observer) => {\n            observer.next({\n                _id: '1234',\n                user: 'Shiqi',\n                userAddress: '14725 NE 20th St, Bellevue, WA 98007',\n                restaurant: 'La Ciel',\n                time: '4/16/2019 3:40:26 AM',\n                status: 3,\n                details: {\n                    dish: ['abc', 'nba', 'blabla'],\n                    quantity: [2, 1, 3],\n                    total: 89.64\n                }\n            });\n            return {unsubscribe() {}};\n        });\n    }\n\n    findAllPendingOrder() {\n        // return this.http.get(environment.baseUrl + '/api/deliver/pending');\n        return new Observable((observer) => {\n            observer.next([\n                {\n                    _id: '1564',\n                    user: 'Shiqi1',\n                    userAddress: '14725 NE 20th St, Bellevue, WA 98007',\n                    restaurant: 'La Ciel',\n                    time: '4/16/2019 3:40:26 AM',\n                    status: 2,\n                    details: {\n                        dish: ['abc', 'nba', 'blabla'],\n                        quantity: [2, 1, 3],\n                        total: 109.64\n                    }\n                },\n                {\n                    _id: '4567',\n                    user: 'Shiqi2',\n                    userAddress: '15920 NE 8th St #3, Bellevue, WA 98008',\n                    restaurant: 'La Ciel',\n                    time: '4/16/2019 13:40:26 PM',\n                    status: 2,\n                    details: {\n                        dish: ['abc', 'nba', 'blabla'],\n                        quantity: [2, 1, 3],\n                        total: 69.65\n                    }\n                },\n                {\n                    _id: '7986',\n                    user: 'Shiqi3',\n                    userAddress: '2347, 1915 140th Ave NE, Bellevue, WA 98005',\n                    restaurant: 'La Ciel',\n                    time: '4/16/2019 3:40:26 AM',\n                    status: 2,\n                    details: {\n                        dish: ['abc', 'nba', 'blabla'],\n                        quantity: [2, 1, 3],\n                        total: 89.64\n                    }\n                },\n            ]);\n            return {unsubscribe() {}};\n        });\n    }\n\n    calculate(lat: String, lng: String, destination: String) {\n        return this.http.post('http://localhost:3200/api/deliver/getdistance', {\n            lat: lat,\n            lng: lng,\n            destination: destination\n        });\n    }\n}\n","import {Menu} from \"../model/restaurant.client.model\";\nimport {Injectable} from \"@angular/core\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {SharedService} from \"./shared.service\";\nimport {Router} from \"@angular/router\";\nimport {environment} from \"../../environments/environment\";\n@Injectable()\nexport class MenuService {\n\n\n    constructor(private _http: HttpClient, private sharedService: SharedService, private router: Router) {\n    }\n\n    baseUrl = environment.baseUrl;\n    options = {withCredentials: false};\n\n    createDish(dish) {\n        return this._http.post(this.baseUrl + '/api/restaurant/menu/', dish);\n    }\n\n    findAllDishesForRestaurant() {\n        return this._http.get(this.baseUrl + '/api/menu');\n    }\n\n    findDishById(dishId) {\n        return this._http.get(this.baseUrl + '/api/restaurant/menu/' + dishId);\n    }\n\n    updateDish(dishId, dish: any) {\n        return this._http.put(this.baseUrl + '/api/restaurant/menu/' + dishId, dish);\n    }\n\n    deleteDish(dishId) {\n        return this._http.delete(this.baseUrl + '/api/restaurant/menu/' + dishId);\n    }\n\n    reorderDishes(startIndex: Number, endIndex: Number, dishes: Menu[]) {\n        return this._http.put(this.baseUrl + '/api/restaurant/menu/'\n            + '/dish?initial=' + startIndex + '&final=' + endIndex, dishes);\n    }\n\n    findImage(imageName: String) {\n        const url = this.baseUrl + '/api/image/' + imageName;\n        return this._http.get(url);\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {environment} from 'src/environments/environment';\nimport {Observable} from 'rxjs';\nimport {HttpClient} from '@angular/common/http';\nimport {Restaurant} from 'src/app/model/restaurant.client.model';\nimport {Order} from '../model/order.client.model';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class OrderService {\n    baseUrl = environment.baseUrl;\n    //orderApiUrl = '/api/order/';\n    userApiUrl = '/api/user/';\n\n    constructor(private http: HttpClient) { }\n\n    createOrder(userId, order) {\n        console.log('front order service createOrder() called');\n        return this.http.post<Order>(this.baseUrl + this.userApiUrl + userId + '/order', order);\n    }\n\n    findOrdersByUser(userId): Observable<Order[]> {\n        console.log('front order service findOrderByUser() called');\n        return this.http.get<Order[]>(this.baseUrl + this.userApiUrl + userId + '/orders');\n    }\n\n    findAllOrdersByDeliver(deliverId): Observable<Order[]> {\n        console.log('front order service findOrderByRDeliver() called');\n        return this.http.get<Order[]>(this.baseUrl + '/api/deliver/' + deliverId + '/orders');\n    }\n\n    findCartorderByUser(userId) {\n        return this.http.get<Order[]>(this.baseUrl + '/api/user/' + userId + '/cartorders');\n    }\n\n    findIntransitOrderByUser(userId) {\n        return this.http.get<Order[]>(this.baseUrl + '/api/user/' + userId + '/intransitorder');\n    }\n\n    findIntransitOrderByDeliver(deliverId) {\n        return this.http.get<Order[]>(this.baseUrl + '/api/deliver/' + deliverId + '/intransitorder');\n    }\n\n    findOrderById(userId, orderId) {\n        console.log('front order service findorderById() called');\n        // Only need to call server's url to get the data.\n        return this.http.get<Order>(this.baseUrl + '/api/order/' + orderId);\n    }\n\n    updateOrder(userId, orderId, order) {\n        console.log('front order service updateOrder() called');\n        return this.http.put<Order>(this.baseUrl + this.userApiUrl + userId + '/order/' + orderId, order);\n    }\n\n    deleteOrder(userId, orderId) {\n        console.log('front order service deleteOrder() called');\n        return this.http.delete<Order>(this.baseUrl + this.userApiUrl + userId + '/order/' + orderId);\n    }\n\n    // maybe use findAllPendingOrders instead of this one\n    findOrderByStatus(deliverId, status) {\n        console.log('front end service findOrderByStatus called');\n        return this.http.get<Order[]>(this.baseUrl+this.userApiUrl+deliverId+'/order/'+status);\n    }\n\n    findAllPendingOrders() {\n        console.log('front end service findAllPendingOrders called');\n        return this.http.get<Order[]>(this.baseUrl + '/api/allpendingorders');\n    }\n\n    checkoutOrder(userId, orderId) {\n        console.log('front end service findOrderByStatus called');\n        return this.http.post<Order>(this.baseUrl + '/api/user/' + userId + '/order/' + orderId + '/checkout', {});\n    }\n    postOrder(userId, orderId) {\n        console.log('front end service findOrderByStatus called');\n        return this.http.post<Order>(this.baseUrl + '/api/user/' + userId + '/order/' + orderId + '/post', {});\n    }\n    acceptOrder(userId, orderId){\n        console.log('front end service findOrderByStatus called');\n        return this.http.post<Order>(this.baseUrl + '/api/deliver/' + userId + '/order/' + orderId + '/accept', {});\n    }\n    completeOrder(userId, orderId) {\n        console.log('front end service findOrderByStatus called');\n        return this.http.post<Order>(this.baseUrl + '/api/deliver/' + userId + '/order/' + orderId + '/complete', {});\n    }\n    cancelOrder(userId, orderId)  {\n        console.log('front end service findOrderByStatus called');\n        return this.http.post<Order>(this.baseUrl + '/api/user/' + userId + '/order/' + orderId + '/cancel', {});\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {environment} from 'src/environments/environment';\nimport {Observable} from 'rxjs';\nimport {HttpClient} from '@angular/common/http';\nimport {Menu, Restaurant} from \"../model/restaurant.client.model\";\nimport {Router} from \"@angular/router\";\nimport {SharedService} from \"./shared.service\";\nimport {map} from 'rxjs/operators';\n\n@Injectable()\nexport class RestaurantService {\n\n\n    constructor(private _http: HttpClient, private sharedService: SharedService, private router: Router){}\n    baseUrl = environment.baseUrl;\n    options = {withCredentials: false};\n    \n    createRestaurant(restaurant: Restaurant) {\n        return this._http.post(this.baseUrl + '/api/restaurant', restaurant);\n    }\n\n    findRestaurantById(restaurantId: String) {\n        return this._http.get(this.baseUrl + '/api/restaurant/' + restaurantId);\n    }\n\n    findRestaurantByUsername(username: String) {\n        return this._http.get(this.baseUrl + '/api/restaurant?username=' + username);\n    }\n\n    findRestaurantByCredentials(username: String, password: String) {\n        return this._http.get<Restaurant>(this.baseUrl + '/api/restaurant?username=' + username + '&password=' + password);\n    }\n\n    updateRestaurant(restaurantId: String, restaurant: Restaurant) {\n        return this._http.put(this.baseUrl + '/api/restaurant/' + restaurantId, restaurant);\n    }\n\n    deleteRestaurant(restaurantId: String) {\n        return this._http.delete(this.baseUrl + '/api/restaurant/' + restaurantId);\n    }\n}\n","import {Injectable} from '@angular/core';\nimport { User } from '../model/user.client.model';\nimport { Order } from '../model/order.client.model';\n\n@Injectable()\nexport class SharedService {\n    user: any;\n    selectedOrder: Order;\n}\n","import {User} from '../model/user.client.model';\nimport {Injectable} from '@angular/core';\nimport 'rxjs/Rx';\nimport {SharedService} from './shared.service';\nimport {environment} from 'src/environments/environment';\nimport {HttpClient} from '@angular/common/http';\nimport {Router} from '@angular/router';\nimport {map} from 'rxjs/operators';\nimport {MatSelectTrigger} from \"@angular/material\";\n\n\n@Injectable()\nexport class UserService {\n    constructor(private _http: HttpClient, private sharedService: SharedService, private router: Router) {}\n    baseUrl = environment.baseUrl;\n    options = {withCredentials: false};\n\n    createUser(user: User) {\n        return this._http.post(this.baseUrl + '/api/user', user);\n    }\n\n    findUserById(userId: String) {\n        return this._http.get(this.baseUrl + '/api/user/' + userId);\n    }\n\n    findUserByUsername(username: String) {\n        return this._http.get(this.baseUrl + '/api/user?username=' + username);\n    }\n\n    findUserByCredentials(username: String, password: String) {\n        return this._http.get<User>(this.baseUrl + '/api/user?username=' + username + '&password=' + password);\n    }\n\n    updateUser(userId: String, user: User) {\n        return this._http.put(this.baseUrl + '/api/user/' + userId, user);\n    }\n\n    deleteUser(userId: String) {\n        return this._http.delete(this.baseUrl + '/api/user/' + userId);\n    }\n\n    login(username: String, password: String, userType: String) {\n        this.options.withCredentials = true; // jga\n\n        const body = {\n            username: username,\n            password: password,\n            userTpye: userType\n        };\n\n        return this._http.post(this.baseUrl + '/api/login', body, this.options);\n    }\n\n\n    logout() {\n        this.options.withCredentials = true;\n        return this._http\n            .post(this.baseUrl + '/api/logout', '', this.options);\n    }\n\n    register(username: String, password: String, userType: String) {\n        this.options.withCredentials = true;\n        const user = {username: username, password: password, userType: userType};\n        return this._http\n            .post(this.baseUrl + '/api/register', user, this.options);\n    }\n\n    loggedIn() {\n        return this._http\n            .post(this.baseUrl + '/api/loggedin', '', this.options)\n            .pipe(\n                map((user) => {\n                        if (user !== 0) {\n                            this.sharedService.user = user;\n                            return true;\n                        } else {\n                            this.router.navigate(['/login']);\n                            return false;\n                        }\n                    }\n                ));\n    }\n}\n\n","import {Injectable} from '@angular/core';\nimport {Order} from 'src/app/model/order.client.model';\nimport {environment} from 'src/environments/environment';\nimport {Observable} from 'rxjs';\nimport {HttpClient} from '@angular/common/http';\n\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class WebsiteService {\n\n    baseUrl = environment.baseUrl;\n    userApiUrl = '/api/user/';\n\n    constructor(private http: HttpClient) {\n    }\n    constructFindUpdateDeleteUrl(userId, websiteId) {\n        return this.baseUrl + this.userApiUrl + userId + '/restaurant/' + websiteId;\n    }\n    createWebsite(website, userId) {\n        console.log('front restaurant service createWebsite() called');\n        return this.http.post<Order>(\n            this.baseUrl + this.userApiUrl + userId + '/restaurant', website);\n    }\n\n\n    findWebsitesByUser(userId): Observable<Order[]> {\n        console.log('front restaurant service findWebsiteByUser() called');\n        return this.http.get<Order[]>(this.baseUrl + this.userApiUrl + userId + '/restaurant');\n    }\n\n    findWebsiteById(userId, websiteId) {\n        console.log('front restaurant service findwebsiteById() called');\n        // Only need to call server's url to get the data.\n        return this.http.get<Order>(this.constructFindUpdateDeleteUrl(userId, websiteId));\n    }\n\n    updateWebsite(userId, websiteId, website) {\n        console.log('front restaurant service updateWebsite() called');\n        return this.http.put<Order>(this.constructFindUpdateDeleteUrl(userId, websiteId), website);\n    }\n\n    deleteWebsite(userId, websiteId) {\n        console.log('front restaurant service deleteWebsite() called');\n        return this.http.delete<Order>(this.constructFindUpdateDeleteUrl(userId, websiteId));\n    }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  baseUrl: 'http://localhost:8080'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import {enableProdMode} from '@angular/core';\nimport {platformBrowserDynamic} from '@angular/platform-browser-dynamic';\n\nimport {AppModule} from './app/app.module';\nimport {environment} from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}